{"version":3,"sources":["src/google-maps/google-maps.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","googleMaps","core","common","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__values","o","s","Symbol","iterator","m","i","length","next","value","done","__read","n","r","e","ar","push","error","MapEventManager","_ngZone","_pending","_listeners","_targetStream","BehaviorSubject","undefined","_clearListeners","e_1","_a","_b","_c","remove","e_1_1","return","getLazyEmitter","name","_this","pipe","switchMap","target","observable","Observable","observer","listener","addListener","event","run","setTarget","currentTarget","forEach","subscriber","subscribe","destroy","complete","DEFAULT_OPTIONS","center","lat","lng","zoom","GoogleMap","_elementRef","platformId","_eventManager","height","width","_options","boundsChanged","centerChanged","mapClick","mapDblclick","mapDrag","mapDragend","mapDragstart","headingChanged","idle","maptypeidChanged","mapMousemove","mapMouseout","mapMouseover","projectionChanged","mapRightclick","tilesloaded","tiltChanged","zoomChanged","_isBrowser","isPlatformBrowser","window","defineProperty","set","_center","enumerable","configurable","_zoom","options","ngOnChanges","changes","_setSize","googleMap","setOptions","_combineOptions","setCenter","setZoom","mapTypeId","setMapTypeId","ngOnInit","_mapEl","nativeElement","querySelector","runOutsideAngular","google","maps","Map","ngOnDestroy","fitBounds","bounds","padding","_assertInitialized","panBy","x","y","panTo","latLng","panToBounds","latLngBounds","getBounds","getCenter","getClickableIcons","getHeading","getMapTypeId","getProjection","getStreetView","getTilt","getZoom","get","controls","data","mapTypes","overlayMapTypes","styles","style","coerceCssPixelValue","assign","decorators","type","Component","args","selector","exportAs","changeDetection","ChangeDetectionStrategy","OnPush","template","encapsulation","ViewEncapsulation","None","ctorParameters","ElementRef","NgZone","Inject","PLATFORM_ID","propDecorators","Input","Output","cssUnitsPattern","test","MapBaseLayer","_map","_initializeObject","_setMap","_unsetMap","Error","Directive","MapBicyclingLayer","_super","apply","arguments","bicyclingLayer","BicyclingLayer","_assertLayerInitialized","setMap","MapCircle","_radius","_destroyed","Subject","circleClick","circleDblclick","circleDrag","circleDragend","circleDragstart","circleMousedown","circleMousemove","circleMouseout","circleMouseover","circleMouseup","radiusChanged","circleRightclick","radius","take","circle","Circle","_watchForOptionsChanges","_watchForCenterChanges","_watchForRadiusChanges","getDraggable","getEditable","getRadius","getVisible","combineLatest","map","takeUntil","setRadius","MapGroundOverlay","_opacity","_url","_bounds","clickable","url","opacity","groundOverlay","GroundOverlay","getValue","_watchForOpacityChanges","_watchForUrlChanges","getOpacity","getUrl","setOpacity","overlay","MapInfoWindow","_googleMap","_position","_destroy","closeclick","contentChanged","domready","positionChanged","zindexChanged","position","infoWindow","InfoWindow","_watchForPositionChanges","close","getContent","getPosition","getZIndex","open","anchor","anchorObject","getAnchor","display","content","setPosition","host","MapKmlLayer","kmlClick","defaultviewportChanged","statusChanged","kmlLayer","KmlLayer","getDefaultViewport","getMetadata","getStatus","setUrl","DEFAULT_MARKER_OPTIONS","MapMarker","animationChanged","clickableChanged","cursorChanged","draggableChanged","flatChanged","iconChanged","mapMousedown","mapMouseup","shapeChanged","titleChanged","visibleChanged","title","_title","label","_label","_clickable","marker","Marker","setTitle","setLabel","setClickable","getAnimation","getClickable","getCursor","getIcon","getLabel","getShape","getTitle","MapMarkerClusterer","_currentMarkers","Set","ariaLabelFn","clusteringbegin","clusteringend","_canInitialize","averageCenter","_averageCenter","batchSizeIE","_batchSizeIE","calculator","_calculator","clusterClass","_clusterClass","enableRetinaIcons","_enableRetinaIcons","gridSize","_gridSize","ignoreHidden","_ignoreHidden","imageExtension","_imageExtension","imagePath","_imagePath","imageSizes","_imageSizes","maxZoom","_maxZoom","minimumClusterSize","_minimumClusterSize","_styles","zIndex","_zIndex","zoomOnClick","_zoomOnClick","markerClusterer","MarkerClusterer","ngAfterContentInit","_watchForMarkerChanges","clusterer","setAverageCenter","setBatchSizeIE","setCalculator","setClusterClass","setEnableRetinaIcons","setGridSize","setIgnoreHidden","setImageExtension","setImagePath","setImageSizes","setMaxZoom","setMinimumClusterSize","setStyles","setZIndex","setZoomOnClick","fitMapToMarkers","getAverageCenter","getBatchSizeIE","getCalculator","getClusterClass","getClusters","getEnableRetinaIcons","getGridSize","getIgnoreHidden","getImageExtension","getImagePath","getImageSizes","getMaxZoom","getMinimumClusterSize","getStyles","getTotalClusters","getTotalMarkers","getZoomOnClick","batchSize","initialMarkers","_getInternalMarkers","_markers","toArray","add","addMarkers","markerComponents","e_2","e_3","e_4","newMarkers","markersToAdd","markersToRemove","_d","from","_e","has","e_2_1","_f","_g","e_3_1","removeMarkers","repaint","markersToRemove_1","markersToRemove_1_1","delete","e_4_1","markers","filter","markerComponent","ContentChildren","descendants","MapPolygon","_paths","polygonClick","polygonDblclick","polygonDrag","polygonDragend","polygonDragstart","polygonMousedown","polygonMousemove","polygonMouseout","polygonMouseover","polygonMouseup","polygonRightclick","paths","polygon","Polygon","_watchForPathChanges","getPath","getPaths","setPaths","MapPolyline","_path","polylineClick","polylineDblclick","polylineDrag","polylineDragend","polylineDragstart","polylineMousedown","polylineMousemove","polylineMouseout","polylineMouseover","polylineMouseup","polylineRightclick","path","polyline","Polyline","setPath","MapRectangle","rectangleClick","rectangleDblclick","rectangleDrag","rectangleDragend","rectangleDragstart","rectangleMousedown","rectangleMousemove","rectangleMouseout","rectangleMouseover","rectangleMouseup","rectangleRightclick","rectangle","Rectangle","_watchForBoundsChanges","setBounds","MapTrafficLayer","_autoRefresh","autoRefresh","trafficLayer","TrafficLayer","_watchForAutoRefreshChanges","MapTransitLayer","transitLayer","TransitLayer","GoogleMapsModule","COMPONENTS","NgModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/google-maps', ['exports', '@angular/core', '@angular/common', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.googleMaps = {}), global.ng.core, global.ng.common, global.rxjs, global.rxjs.operators));\n}(this, (function (exports, core, common, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n    /* global Reflect, Promise */\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b)\n                if (Object.prototype.hasOwnProperty.call(b, p))\n                    d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    function __extends(d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n    var __assign = function () {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s)\n                    if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    function __rest(s, e) {\n        var t = {};\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                    t[p[i]] = s[p[i]];\n            }\n        return t;\n    }\n    function __decorate(decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n            r = Reflect.decorate(decorators, target, key, desc);\n        else\n            for (var i = decorators.length - 1; i >= 0; i--)\n                if (d = decorators[i])\n                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    }\n    function __param(paramIndex, decorator) {\n        return function (target, key) { decorator(target, key, paramIndex); };\n    }\n    function __metadata(metadataKey, metadataValue) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n            return Reflect.metadata(metadataKey, metadataValue);\n    }\n    function __awaiter(thisArg, _arguments, P, generator) {\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) { try {\n                step(generator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function rejected(value) { try {\n                step(generator[\"throw\"](value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    }\n    function __generator(thisArg, body) {\n        var _ = { label: 0, sent: function () { if (t[0] & 1)\n                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () { return this; }), g;\n        function verb(n) { return function (v) { return step([n, v]); }; }\n        function step(op) {\n            if (f)\n                throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                        return t;\n                    if (y = 0, t)\n                        op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2])\n                                _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                }\n                catch (e) {\n                    op = [6, e];\n                    y = 0;\n                }\n                finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5)\n                throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    }\n    var __createBinding = Object.create ? (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });\n    }) : (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        o[k2] = m[k];\n    });\n    function __exportStar(m, o) {\n        for (var p in m)\n            if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p))\n                __createBinding(o, m, p);\n    }\n    function __values(o) {\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n        if (m)\n            return m.call(o);\n        if (o && typeof o.length === \"number\")\n            return {\n                next: function () {\n                    if (o && i >= o.length)\n                        o = void 0;\n                    return { value: o && o[i++], done: !o };\n                }\n            };\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    }\n    function __read(o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m)\n            return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n                ar.push(r.value);\n        }\n        catch (error) {\n            e = { error: error };\n        }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"]))\n                    m.call(i);\n            }\n            finally {\n                if (e)\n                    throw e.error;\n            }\n        }\n        return ar;\n    }\n    /** @deprecated */\n    function __spread() {\n        for (var ar = [], i = 0; i < arguments.length; i++)\n            ar = ar.concat(__read(arguments[i]));\n        return ar;\n    }\n    /** @deprecated */\n    function __spreadArrays() {\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n            s += arguments[i].length;\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n                r[k] = a[j];\n        return r;\n    }\n    function __spreadArray(to, from) {\n        for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n            to[j] = from[i];\n        return to;\n    }\n    function __await(v) {\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\n    }\n    function __asyncGenerator(thisArg, _arguments, generator) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n        function verb(n) { if (g[n])\n            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n        function resume(n, v) { try {\n            step(g[n](v));\n        }\n        catch (e) {\n            settle(q[0][3], e);\n        } }\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n        function fulfill(value) { resume(\"next\", value); }\n        function reject(value) { resume(\"throw\", value); }\n        function settle(f, v) { if (f(v), q.shift(), q.length)\n            resume(q[0][0], q[0][1]); }\n    }\n    function __asyncDelegator(o) {\n        var i, p;\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\n    }\n    function __asyncValues(o) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var m = o[Symbol.asyncIterator], i;\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }\n    }\n    function __makeTemplateObject(cooked, raw) {\n        if (Object.defineProperty) {\n            Object.defineProperty(cooked, \"raw\", { value: raw });\n        }\n        else {\n            cooked.raw = raw;\n        }\n        return cooked;\n    }\n    ;\n    var __setModuleDefault = Object.create ? (function (o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n    }) : function (o, v) {\n        o[\"default\"] = v;\n    };\n    function __importStar(mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k))\n                    __createBinding(result, mod, k);\n        __setModuleDefault(result, mod);\n        return result;\n    }\n    function __importDefault(mod) {\n        return (mod && mod.__esModule) ? mod : { default: mod };\n    }\n    function __classPrivateFieldGet(receiver, privateMap) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to get private field on non-instance\");\n        }\n        return privateMap.get(receiver);\n    }\n    function __classPrivateFieldSet(receiver, privateMap, value) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to set private field on non-instance\");\n        }\n        privateMap.set(receiver, value);\n        return value;\n    }\n\n    /** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\n    var MapEventManager = /** @class */ (function () {\n        function MapEventManager(_ngZone) {\n            this._ngZone = _ngZone;\n            /** Pending listeners that were added before the target was set. */\n            this._pending = [];\n            this._listeners = [];\n            this._targetStream = new rxjs.BehaviorSubject(undefined);\n        }\n        /** Clears all currently-registered event listeners. */\n        MapEventManager.prototype._clearListeners = function () {\n            var e_1, _a;\n            try {\n                for (var _b = __values(this._listeners), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var listener = _c.value;\n                    listener.remove();\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this._listeners = [];\n        };\n        /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n        MapEventManager.prototype.getLazyEmitter = function (name) {\n            var _this = this;\n            return this._targetStream.pipe(operators.switchMap(function (target) {\n                var observable = new rxjs.Observable(function (observer) {\n                    // If the target hasn't been initialized yet, cache the observer so it can be added later.\n                    if (!target) {\n                        _this._pending.push({ observable: observable, observer: observer });\n                        return undefined;\n                    }\n                    var listener = target.addListener(name, function (event) {\n                        _this._ngZone.run(function () { return observer.next(event); });\n                    });\n                    _this._listeners.push(listener);\n                    return function () { return listener.remove(); };\n                });\n                return observable;\n            }));\n        };\n        /** Sets the current target that the manager should bind events to. */\n        MapEventManager.prototype.setTarget = function (target) {\n            var currentTarget = this._targetStream.value;\n            if (target === currentTarget) {\n                return;\n            }\n            // Clear the listeners from the pre-existing target.\n            if (currentTarget) {\n                this._clearListeners();\n                this._pending = [];\n            }\n            this._targetStream.next(target);\n            // Add the listeners that were bound before the map was initialized.\n            this._pending.forEach(function (subscriber) { return subscriber.observable.subscribe(subscriber.observer); });\n            this._pending = [];\n        };\n        /** Destroys the manager and clears the event listeners. */\n        MapEventManager.prototype.destroy = function () {\n            this._clearListeners();\n            this._pending = [];\n            this._targetStream.complete();\n        };\n        return MapEventManager;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** default options set to the Googleplex */\n    var DEFAULT_OPTIONS = {\n        center: { lat: 37.421995, lng: -122.084092 },\n        zoom: 17\n    };\n    /** Arbitrary default height for the map element */\n    var DEFAULT_HEIGHT = '500px';\n    /** Arbitrary default width for the map element */\n    var DEFAULT_WIDTH = '500px';\n    /**\n     * Angular component that renders a Google Map via the Google Maps JavaScript\n     * API.\n     * @see https://developers.google.com/maps/documentation/javascript/reference/\n     */\n    var GoogleMap = /** @class */ (function () {\n        function GoogleMap(_elementRef, _ngZone, platformId) {\n            this._elementRef = _elementRef;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n            this.height = DEFAULT_HEIGHT;\n            /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n            this.width = DEFAULT_WIDTH;\n            this._options = DEFAULT_OPTIONS;\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n             */\n            this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n             */\n            this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n             */\n            this.mapClick = this._eventManager\n                .getLazyEmitter('click');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n             */\n            this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n             */\n            this.mapDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n             */\n            this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n             */\n            this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n             */\n            this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n             */\n            this.idle = this._eventManager.getLazyEmitter('idle');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n             */\n            this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n             */\n            this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n             */\n            this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n             */\n            this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n             */\n            this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n             */\n            this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n             */\n            this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n             */\n            this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n             */\n            this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n            this._isBrowser = common.isPlatformBrowser(platformId);\n            if (this._isBrowser) {\n                var googleMapsWindow = window;\n                if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw Error('Namespace google not found, cannot construct embedded google ' +\n                        'map. Please install the Google Maps JavaScript API: ' +\n                        'https://developers.google.com/maps/documentation/javascript/' +\n                        'tutorial#Loading_the_Maps_API');\n                }\n            }\n        }\n        Object.defineProperty(GoogleMap.prototype, \"center\", {\n            set: function (center) {\n                this._center = center;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"zoom\", {\n            set: function (zoom) {\n                this._zoom = zoom;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"options\", {\n            set: function (options) {\n                this._options = options || DEFAULT_OPTIONS;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        GoogleMap.prototype.ngOnChanges = function (changes) {\n            if (changes['height'] || changes['width']) {\n                this._setSize();\n            }\n            var googleMap = this.googleMap;\n            if (googleMap) {\n                if (changes['options']) {\n                    googleMap.setOptions(this._combineOptions());\n                }\n                if (changes['center'] && this._center) {\n                    googleMap.setCenter(this._center);\n                }\n                // Note that the zoom can be zero.\n                if (changes['zoom'] && this._zoom != null) {\n                    googleMap.setZoom(this._zoom);\n                }\n                if (changes['mapTypeId'] && this.mapTypeId) {\n                    googleMap.setMapTypeId(this.mapTypeId);\n                }\n            }\n        };\n        GoogleMap.prototype.ngOnInit = function () {\n            var _this = this;\n            // It should be a noop during server-side rendering.\n            if (this._isBrowser) {\n                this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n                this._setSize();\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(function () {\n                    _this.googleMap = new google.maps.Map(_this._mapEl, _this._combineOptions());\n                });\n                this._eventManager.setTarget(this.googleMap);\n            }\n        };\n        GoogleMap.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n         */\n        GoogleMap.prototype.fitBounds = function (bounds, padding) {\n            this._assertInitialized();\n            this.googleMap.fitBounds(bounds, padding);\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n         */\n        GoogleMap.prototype.panBy = function (x, y) {\n            this._assertInitialized();\n            this.googleMap.panBy(x, y);\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n         */\n        GoogleMap.prototype.panTo = function (latLng) {\n            this._assertInitialized();\n            this.googleMap.panTo(latLng);\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n         */\n        GoogleMap.prototype.panToBounds = function (latLngBounds, padding) {\n            this._assertInitialized();\n            this.googleMap.panToBounds(latLngBounds, padding);\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n         */\n        GoogleMap.prototype.getBounds = function () {\n            this._assertInitialized();\n            return this.googleMap.getBounds() || null;\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n         */\n        GoogleMap.prototype.getCenter = function () {\n            this._assertInitialized();\n            return this.googleMap.getCenter();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n         */\n        GoogleMap.prototype.getClickableIcons = function () {\n            this._assertInitialized();\n            return this.googleMap.getClickableIcons();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n         */\n        GoogleMap.prototype.getHeading = function () {\n            this._assertInitialized();\n            return this.googleMap.getHeading();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n         */\n        GoogleMap.prototype.getMapTypeId = function () {\n            this._assertInitialized();\n            return this.googleMap.getMapTypeId();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n         */\n        GoogleMap.prototype.getProjection = function () {\n            this._assertInitialized();\n            return this.googleMap.getProjection();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n         */\n        GoogleMap.prototype.getStreetView = function () {\n            this._assertInitialized();\n            return this.googleMap.getStreetView();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n         */\n        GoogleMap.prototype.getTilt = function () {\n            this._assertInitialized();\n            return this.googleMap.getTilt();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n         */\n        GoogleMap.prototype.getZoom = function () {\n            this._assertInitialized();\n            return this.googleMap.getZoom();\n        };\n        Object.defineProperty(GoogleMap.prototype, \"controls\", {\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n             */\n            get: function () {\n                this._assertInitialized();\n                return this.googleMap.controls;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"data\", {\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n             */\n            get: function () {\n                this._assertInitialized();\n                return this.googleMap.data;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"mapTypes\", {\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n             */\n            get: function () {\n                this._assertInitialized();\n                return this.googleMap.mapTypes;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"overlayMapTypes\", {\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n             */\n            get: function () {\n                this._assertInitialized();\n                return this.googleMap.overlayMapTypes;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        GoogleMap.prototype._setSize = function () {\n            if (this._mapEl) {\n                var styles = this._mapEl.style;\n                styles.height =\n                    this.height === null ? '' : (coerceCssPixelValue(this.height) || DEFAULT_HEIGHT);\n                styles.width = this.width === null ? '' : (coerceCssPixelValue(this.width) || DEFAULT_WIDTH);\n            }\n        };\n        /** Combines the center and zoom and the other map options into a single object */\n        GoogleMap.prototype._combineOptions = function () {\n            var _a, _b;\n            var options = this._options || {};\n            return Object.assign(Object.assign({}, options), {\n                // It's important that we set **some** kind of `center` and `zoom`, otherwise\n                // Google Maps will render a blank rectangle which looks broken.\n                center: this._center || options.center || DEFAULT_OPTIONS.center, zoom: (_b = (_a = this._zoom) !== null && _a !== void 0 ? _a : options.zoom) !== null && _b !== void 0 ? _b : DEFAULT_OPTIONS.zoom, mapTypeId: this.mapTypeId || options.mapTypeId\n            });\n        };\n        /** Asserts that the map has been initialized. */\n        GoogleMap.prototype._assertInitialized = function () {\n            if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n        };\n        return GoogleMap;\n    }());\n    GoogleMap.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'google-map',\n                    exportAs: 'googleMap',\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n                    encapsulation: core.ViewEncapsulation.None\n                },] }\n    ];\n    GoogleMap.ctorParameters = function () { return [\n        { type: core.ElementRef },\n        { type: core.NgZone },\n        { type: Object, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] }] }\n    ]; };\n    GoogleMap.propDecorators = {\n        height: [{ type: core.Input }],\n        width: [{ type: core.Input }],\n        mapTypeId: [{ type: core.Input }],\n        center: [{ type: core.Input }],\n        zoom: [{ type: core.Input }],\n        options: [{ type: core.Input }],\n        boundsChanged: [{ type: core.Output }],\n        centerChanged: [{ type: core.Output }],\n        mapClick: [{ type: core.Output }],\n        mapDblclick: [{ type: core.Output }],\n        mapDrag: [{ type: core.Output }],\n        mapDragend: [{ type: core.Output }],\n        mapDragstart: [{ type: core.Output }],\n        headingChanged: [{ type: core.Output }],\n        idle: [{ type: core.Output }],\n        maptypeidChanged: [{ type: core.Output }],\n        mapMousemove: [{ type: core.Output }],\n        mapMouseout: [{ type: core.Output }],\n        mapMouseover: [{ type: core.Output }],\n        projectionChanged: [{ type: core.Output }],\n        mapRightclick: [{ type: core.Output }],\n        tilesloaded: [{ type: core.Output }],\n        tiltChanged: [{ type: core.Output }],\n        zoomChanged: [{ type: core.Output }]\n    };\n    var cssUnitsPattern = /([A-Za-z%]+)$/;\n    /** Coerces a value to a CSS pixel value. */\n    function coerceCssPixelValue(value) {\n        if (value == null) {\n            return '';\n        }\n        return cssUnitsPattern.test(value) ? value : value + \"px\";\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MapBaseLayer = /** @class */ (function () {\n        function MapBaseLayer(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n        }\n        MapBaseLayer.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._ngZone.runOutsideAngular(function () {\n                    _this._initializeObject();\n                });\n                this._assertInitialized();\n                this._setMap();\n            }\n        };\n        MapBaseLayer.prototype.ngOnDestroy = function () {\n            this._unsetMap();\n        };\n        MapBaseLayer.prototype._assertInitialized = function () {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n        };\n        MapBaseLayer.prototype._initializeObject = function () { };\n        MapBaseLayer.prototype._setMap = function () { };\n        MapBaseLayer.prototype._unsetMap = function () { };\n        return MapBaseLayer;\n    }());\n    MapBaseLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-base-layer',\n                    exportAs: 'mapBaseLayer',\n                },] }\n    ];\n    MapBaseLayer.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n\n    /**\n     * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n     */\n    var MapBicyclingLayer = /** @class */ (function (_super) {\n        __extends(MapBicyclingLayer, _super);\n        function MapBicyclingLayer() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MapBicyclingLayer.prototype._initializeObject = function () {\n            this.bicyclingLayer = new google.maps.BicyclingLayer();\n        };\n        MapBicyclingLayer.prototype._setMap = function () {\n            this._assertLayerInitialized();\n            this.bicyclingLayer.setMap(this._map.googleMap);\n        };\n        MapBicyclingLayer.prototype._unsetMap = function () {\n            if (this.bicyclingLayer) {\n                this.bicyclingLayer.setMap(null);\n            }\n        };\n        MapBicyclingLayer.prototype._assertLayerInitialized = function () {\n            if (!this.bicyclingLayer) {\n                throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n                    'Please wait for the Transit Layer to load before trying to interact with it.');\n            }\n        };\n        return MapBicyclingLayer;\n    }(MapBaseLayer));\n    MapBicyclingLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-bicycling-layer',\n                    exportAs: 'mapBicyclingLayer',\n                },] }\n    ];\n\n    /**\n     * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n     * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n     */\n    var MapCircle = /** @class */ (function () {\n        function MapCircle(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._center = new rxjs.BehaviorSubject(undefined);\n            this._radius = new rxjs.BehaviorSubject(undefined);\n            this._destroyed = new rxjs.Subject();\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n             */\n            this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n             */\n            this.circleClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n             */\n            this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n             */\n            this.circleDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n             */\n            this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n             */\n            this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n             */\n            this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n             */\n            this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n             */\n            this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n             */\n            this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n             */\n            this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n             */\n            this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n             */\n            this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n        }\n        Object.defineProperty(MapCircle.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapCircle.prototype, \"center\", {\n            set: function (center) {\n                this._center.next(center);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapCircle.prototype, \"radius\", {\n            set: function (radius) {\n                this._radius.next(radius);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapCircle.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.circle = new google.maps.Circle(options);\n                    });\n                    _this._assertInitialized();\n                    _this.circle.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.circle);\n                });\n                this._watchForOptionsChanges();\n                this._watchForCenterChanges();\n                this._watchForRadiusChanges();\n            }\n        };\n        MapCircle.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.circle) {\n                this.circle.setMap(null);\n            }\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n         */\n        MapCircle.prototype.getBounds = function () {\n            this._assertInitialized();\n            return this.circle.getBounds();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n         */\n        MapCircle.prototype.getCenter = function () {\n            this._assertInitialized();\n            return this.circle.getCenter();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n         */\n        MapCircle.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return this.circle.getDraggable();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n         */\n        MapCircle.prototype.getEditable = function () {\n            this._assertInitialized();\n            return this.circle.getEditable();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n         */\n        MapCircle.prototype.getRadius = function () {\n            this._assertInitialized();\n            return this.circle.getRadius();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n         */\n        MapCircle.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.circle.getVisible();\n        };\n        MapCircle.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._center, this._radius])\n                .pipe(operators.map(function (_a) {\n                var _b = __read(_a, 3), options = _b[0], center = _b[1], radius = _b[2];\n                var combinedOptions = Object.assign(Object.assign({}, options), { center: center || options.center, radius: radius !== undefined ? radius : options.radius });\n                return combinedOptions;\n            }));\n        };\n        MapCircle.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.circle.setOptions(options);\n            });\n        };\n        MapCircle.prototype._watchForCenterChanges = function () {\n            var _this = this;\n            this._center.pipe(operators.takeUntil(this._destroyed)).subscribe(function (center) {\n                if (center) {\n                    _this._assertInitialized();\n                    _this.circle.setCenter(center);\n                }\n            });\n        };\n        MapCircle.prototype._watchForRadiusChanges = function () {\n            var _this = this;\n            this._radius.pipe(operators.takeUntil(this._destroyed)).subscribe(function (radius) {\n                if (radius !== undefined) {\n                    _this._assertInitialized();\n                    _this.circle.setRadius(radius);\n                }\n            });\n        };\n        MapCircle.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.circle) {\n                    throw Error('Cannot interact with a Google Map Circle before it has been ' +\n                        'initialized. Please wait for the Circle to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapCircle;\n    }());\n    MapCircle.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-circle',\n                    exportAs: 'mapCircle',\n                },] }\n    ];\n    MapCircle.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapCircle.propDecorators = {\n        options: [{ type: core.Input }],\n        center: [{ type: core.Input }],\n        radius: [{ type: core.Input }],\n        centerChanged: [{ type: core.Output }],\n        circleClick: [{ type: core.Output }],\n        circleDblclick: [{ type: core.Output }],\n        circleDrag: [{ type: core.Output }],\n        circleDragend: [{ type: core.Output }],\n        circleDragstart: [{ type: core.Output }],\n        circleMousedown: [{ type: core.Output }],\n        circleMousemove: [{ type: core.Output }],\n        circleMouseout: [{ type: core.Output }],\n        circleMouseover: [{ type: core.Output }],\n        circleMouseup: [{ type: core.Output }],\n        radiusChanged: [{ type: core.Output }],\n        circleRightclick: [{ type: core.Output }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n     */\n    var MapGroundOverlay = /** @class */ (function () {\n        function MapGroundOverlay(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._opacity = new rxjs.BehaviorSubject(1);\n            this._url = new rxjs.BehaviorSubject('');\n            this._bounds = new rxjs.BehaviorSubject(undefined);\n            this._destroyed = new rxjs.Subject();\n            /** Whether the overlay is clickable */\n            this.clickable = false;\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n             */\n            this.mapClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/image-overlay\n             * #GroundOverlay.dblclick\n             */\n            this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        }\n        Object.defineProperty(MapGroundOverlay.prototype, \"url\", {\n            /** URL of the image that will be shown in the overlay. */\n            set: function (url) {\n                this._url.next(url);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapGroundOverlay.prototype, \"bounds\", {\n            /** Bounds for the overlay. */\n            get: function () {\n                return this._bounds.value;\n            },\n            set: function (bounds) {\n                this._bounds.next(bounds);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapGroundOverlay.prototype, \"opacity\", {\n            /** Opacity of the overlay. */\n            set: function (opacity) {\n                this._opacity.next(opacity);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapGroundOverlay.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                // The ground overlay setup is slightly different from the other Google Maps objects in that\n                // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n                // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n                this._bounds.pipe(operators.takeUntil(this._destroyed)).subscribe(function (bounds) {\n                    if (_this.groundOverlay) {\n                        _this.groundOverlay.setMap(null);\n                        _this.groundOverlay = undefined;\n                    }\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    if (bounds) {\n                        _this._ngZone.runOutsideAngular(function () {\n                            _this.groundOverlay = new google.maps.GroundOverlay(_this._url.getValue(), bounds, {\n                                clickable: _this.clickable,\n                                opacity: _this._opacity.value,\n                            });\n                        });\n                        _this._assertInitialized();\n                        _this.groundOverlay.setMap(_this._map.googleMap);\n                        _this._eventManager.setTarget(_this.groundOverlay);\n                    }\n                });\n                this._watchForOpacityChanges();\n                this._watchForUrlChanges();\n            }\n        };\n        MapGroundOverlay.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.groundOverlay) {\n                this.groundOverlay.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.getBounds\n         */\n        MapGroundOverlay.prototype.getBounds = function () {\n            this._assertInitialized();\n            return this.groundOverlay.getBounds();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.getOpacity\n         */\n        MapGroundOverlay.prototype.getOpacity = function () {\n            this._assertInitialized();\n            return this.groundOverlay.getOpacity();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.getUrl\n         */\n        MapGroundOverlay.prototype.getUrl = function () {\n            this._assertInitialized();\n            return this.groundOverlay.getUrl();\n        };\n        MapGroundOverlay.prototype._watchForOpacityChanges = function () {\n            var _this = this;\n            this._opacity.pipe(operators.takeUntil(this._destroyed)).subscribe(function (opacity) {\n                if (opacity != null) {\n                    _this._assertInitialized();\n                    _this.groundOverlay.setOpacity(opacity);\n                }\n            });\n        };\n        MapGroundOverlay.prototype._watchForUrlChanges = function () {\n            var _this = this;\n            this._url.pipe(operators.takeUntil(this._destroyed)).subscribe(function (url) {\n                _this._assertInitialized();\n                var overlay = _this.groundOverlay;\n                overlay.set('url', url);\n                // Google Maps only redraws the overlay if we re-set the map.\n                overlay.setMap(null);\n                overlay.setMap(_this._map.googleMap);\n            });\n        };\n        MapGroundOverlay.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.groundOverlay) {\n                    throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n                        'Please wait for the GroundOverlay to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapGroundOverlay;\n    }());\n    MapGroundOverlay.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-ground-overlay',\n                    exportAs: 'mapGroundOverlay',\n                },] }\n    ];\n    MapGroundOverlay.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapGroundOverlay.propDecorators = {\n        url: [{ type: core.Input }],\n        bounds: [{ type: core.Input }],\n        clickable: [{ type: core.Input }],\n        opacity: [{ type: core.Input }],\n        mapClick: [{ type: core.Output }],\n        mapDblclick: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/info-window\n     */\n    var MapInfoWindow = /** @class */ (function () {\n        function MapInfoWindow(_googleMap, _elementRef, _ngZone) {\n            this._googleMap = _googleMap;\n            this._elementRef = _elementRef;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._position = new rxjs.BehaviorSubject(undefined);\n            this._destroy = new rxjs.Subject();\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n             */\n            this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window\n             * #InfoWindow.content_changed\n             */\n            this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n             */\n            this.domready = this._eventManager.getLazyEmitter('domready');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window\n             * #InfoWindow.position_changed\n             */\n            this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window\n             * #InfoWindow.zindex_changed\n             */\n            this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n        }\n        Object.defineProperty(MapInfoWindow.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapInfoWindow.prototype, \"position\", {\n            set: function (position) {\n                this._position.next(position);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapInfoWindow.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._googleMap._isBrowser) {\n                var combinedOptionsChanges = this._combineOptions();\n                combinedOptionsChanges.pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.infoWindow = new google.maps.InfoWindow(options);\n                    });\n                    _this._eventManager.setTarget(_this.infoWindow);\n                });\n                this._watchForOptionsChanges();\n                this._watchForPositionChanges();\n            }\n        };\n        MapInfoWindow.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroy.next();\n            this._destroy.complete();\n            // If no info window has been created on the server, we do not try closing it.\n            // On the server, an info window cannot be created and this would cause errors.\n            if (this.infoWindow) {\n                this.close();\n            }\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n         */\n        MapInfoWindow.prototype.close = function () {\n            this._assertInitialized();\n            this.infoWindow.close();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n         */\n        MapInfoWindow.prototype.getContent = function () {\n            this._assertInitialized();\n            return this.infoWindow.getContent();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.getPosition\n         */\n        MapInfoWindow.prototype.getPosition = function () {\n            this._assertInitialized();\n            return this.infoWindow.getPosition();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n         */\n        MapInfoWindow.prototype.getZIndex = function () {\n            this._assertInitialized();\n            return this.infoWindow.getZIndex();\n        };\n        /**\n         * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n         * then the position property of the options input is used instead.\n         */\n        MapInfoWindow.prototype.open = function (anchor) {\n            this._assertInitialized();\n            var anchorObject = anchor ? anchor.getAnchor() : undefined;\n            // Prevent the info window from initializing when trying to reopen on the same anchor.\n            // Note that when the window is opened for the first time, the anchor will always be\n            // undefined. If that's the case, we have to allow it to open in order to handle the\n            // case where the window doesn't have an anchor, but is placed at a particular position.\n            if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n                this._elementRef.nativeElement.style.display = '';\n                this.infoWindow.open(this._googleMap.googleMap, anchorObject);\n            }\n        };\n        MapInfoWindow.prototype._combineOptions = function () {\n            var _this = this;\n            return rxjs.combineLatest([this._options, this._position]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], position = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { position: position || options.position, content: _this._elementRef.nativeElement });\n                return combinedOptions;\n            }));\n        };\n        MapInfoWindow.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroy)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.infoWindow.setOptions(options);\n            });\n        };\n        MapInfoWindow.prototype._watchForPositionChanges = function () {\n            var _this = this;\n            this._position.pipe(operators.takeUntil(this._destroy)).subscribe(function (position) {\n                if (position) {\n                    _this._assertInitialized();\n                    _this.infoWindow.setPosition(position);\n                }\n            });\n        };\n        MapInfoWindow.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._googleMap.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.infoWindow) {\n                    throw Error('Cannot interact with a Google Map Info Window before it has been ' +\n                        'initialized. Please wait for the Info Window to load before trying to interact with ' +\n                        'it.');\n                }\n            }\n        };\n        return MapInfoWindow;\n    }());\n    MapInfoWindow.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-info-window',\n                    exportAs: 'mapInfoWindow',\n                    host: { 'style': 'display: none' },\n                },] }\n    ];\n    MapInfoWindow.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.ElementRef },\n        { type: core.NgZone }\n    ]; };\n    MapInfoWindow.propDecorators = {\n        options: [{ type: core.Input }],\n        position: [{ type: core.Input }],\n        closeclick: [{ type: core.Output }],\n        contentChanged: [{ type: core.Output }],\n        domready: [{ type: core.Output }],\n        positionChanged: [{ type: core.Output }],\n        zindexChanged: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n     */\n    var MapKmlLayer = /** @class */ (function () {\n        function MapKmlLayer(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._url = new rxjs.BehaviorSubject('');\n            this._destroyed = new rxjs.Subject();\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n             */\n            this.kmlClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/kml\n             * #KmlLayer.defaultviewport_changed\n             */\n            this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n             */\n            this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n        }\n        Object.defineProperty(MapKmlLayer.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapKmlLayer.prototype, \"url\", {\n            set: function (url) {\n                this._url.next(url);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapKmlLayer.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () { return _this.kmlLayer = new google.maps.KmlLayer(options); });\n                    _this._assertInitialized();\n                    _this.kmlLayer.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.kmlLayer);\n                });\n                this._watchForOptionsChanges();\n                this._watchForUrlChanges();\n            }\n        };\n        MapKmlLayer.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.kmlLayer) {\n                this.kmlLayer.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n         */\n        MapKmlLayer.prototype.getDefaultViewport = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getDefaultViewport();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n         */\n        MapKmlLayer.prototype.getMetadata = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getMetadata();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n         */\n        MapKmlLayer.prototype.getStatus = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getStatus();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n         */\n        MapKmlLayer.prototype.getUrl = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getUrl();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n         */\n        MapKmlLayer.prototype.getZIndex = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getZIndex();\n        };\n        MapKmlLayer.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._url]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], url = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { url: url || options.url });\n                return combinedOptions;\n            }));\n        };\n        MapKmlLayer.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                if (_this.kmlLayer) {\n                    _this._assertInitialized();\n                    _this.kmlLayer.setOptions(options);\n                }\n            });\n        };\n        MapKmlLayer.prototype._watchForUrlChanges = function () {\n            var _this = this;\n            this._url.pipe(operators.takeUntil(this._destroyed)).subscribe(function (url) {\n                if (url && _this.kmlLayer) {\n                    _this._assertInitialized();\n                    _this.kmlLayer.setUrl(url);\n                }\n            });\n        };\n        MapKmlLayer.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.kmlLayer) {\n                    throw Error('Cannot interact with a Google Map KmlLayer before it has been ' +\n                        'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapKmlLayer;\n    }());\n    MapKmlLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-kml-layer',\n                    exportAs: 'mapKmlLayer',\n                },] }\n    ];\n    MapKmlLayer.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapKmlLayer.propDecorators = {\n        options: [{ type: core.Input }],\n        url: [{ type: core.Input }],\n        kmlClick: [{ type: core.Output }],\n        defaultviewportChanged: [{ type: core.Output }],\n        statusChanged: [{ type: core.Output }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Default options for the Google Maps marker component. Displays a marker\n     * at the Googleplex.\n     */\n    var DEFAULT_MARKER_OPTIONS = {\n        position: { lat: 37.421995, lng: -122.084092 },\n    };\n    /**\n     * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/marker\n     */\n    var MapMarker = /** @class */ (function () {\n        function MapMarker(_googleMap, _ngZone) {\n            this._googleMap = _googleMap;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n             */\n            this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n             */\n            this.mapClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n             */\n            this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n             */\n            this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n             */\n            this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n             */\n            this.mapDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n             */\n            this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n             */\n            this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n             */\n            this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n             */\n            this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n             */\n            this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n             */\n            this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n             */\n            this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n             */\n            this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n             */\n            this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n             */\n            this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n             */\n            this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n             */\n            this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n             */\n            this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n             */\n            this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n             */\n            this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n        }\n        Object.defineProperty(MapMarker.prototype, \"title\", {\n            /**\n             * Title of the marker.\n             * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n             */\n            set: function (title) {\n                this._title = title;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarker.prototype, \"position\", {\n            /**\n             * Position of the marker. See:\n             * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n             */\n            set: function (position) {\n                this._position = position;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarker.prototype, \"label\", {\n            /**\n             * Label for the marker.\n             * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n             */\n            set: function (label) {\n                this._label = label;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarker.prototype, \"clickable\", {\n            /**\n             * Whether the marker is clickable. See:\n             * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n             */\n            set: function (clickable) {\n                this._clickable = clickable;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarker.prototype, \"options\", {\n            /**\n             * Options used to configure the marker.\n             * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n             */\n            set: function (options) {\n                this._options = options;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapMarker.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._googleMap._isBrowser) {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(function () {\n                    _this.marker = new google.maps.Marker(_this._combineOptions());\n                });\n                this._assertInitialized();\n                this.marker.setMap(this._googleMap.googleMap);\n                this._eventManager.setTarget(this.marker);\n            }\n        };\n        MapMarker.prototype.ngOnChanges = function (changes) {\n            var _a = this, marker = _a.marker, _title = _a._title, _position = _a._position, _label = _a._label, _clickable = _a._clickable;\n            if (marker) {\n                if (changes['options']) {\n                    marker.setOptions(this._combineOptions());\n                }\n                if (changes['title'] && _title !== undefined) {\n                    marker.setTitle(_title);\n                }\n                if (changes['position'] && _position) {\n                    marker.setPosition(_position);\n                }\n                if (changes['label'] && _label !== undefined) {\n                    marker.setLabel(_label);\n                }\n                if (changes['clickable'] && _clickable !== undefined) {\n                    marker.setClickable(_clickable);\n                }\n            }\n        };\n        MapMarker.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            if (this.marker) {\n                this.marker.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n         */\n        MapMarker.prototype.getAnimation = function () {\n            this._assertInitialized();\n            return this.marker.getAnimation() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n         */\n        MapMarker.prototype.getClickable = function () {\n            this._assertInitialized();\n            return this.marker.getClickable();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n         */\n        MapMarker.prototype.getCursor = function () {\n            this._assertInitialized();\n            return this.marker.getCursor() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n         */\n        MapMarker.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return !!this.marker.getDraggable();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n         */\n        MapMarker.prototype.getIcon = function () {\n            this._assertInitialized();\n            return this.marker.getIcon() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n         */\n        MapMarker.prototype.getLabel = function () {\n            this._assertInitialized();\n            return this.marker.getLabel() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n         */\n        MapMarker.prototype.getOpacity = function () {\n            this._assertInitialized();\n            return this.marker.getOpacity() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n         */\n        MapMarker.prototype.getPosition = function () {\n            this._assertInitialized();\n            return this.marker.getPosition() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n         */\n        MapMarker.prototype.getShape = function () {\n            this._assertInitialized();\n            return this.marker.getShape() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n         */\n        MapMarker.prototype.getTitle = function () {\n            this._assertInitialized();\n            return this.marker.getTitle() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n         */\n        MapMarker.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.marker.getVisible();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n         */\n        MapMarker.prototype.getZIndex = function () {\n            this._assertInitialized();\n            return this.marker.getZIndex() || null;\n        };\n        /** Gets the anchor point that can be used to attach other Google Maps objects. */\n        MapMarker.prototype.getAnchor = function () {\n            this._assertInitialized();\n            return this.marker;\n        };\n        /** Creates a combined options object using the passed-in options and the individual inputs. */\n        MapMarker.prototype._combineOptions = function () {\n            var options = this._options || DEFAULT_MARKER_OPTIONS;\n            return Object.assign(Object.assign({}, options), { title: this._title || options.title, position: this._position || options.position, label: this._label || options.label, clickable: this._clickable !== undefined ? this._clickable : options.clickable, map: this._googleMap.googleMap });\n        };\n        MapMarker.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._googleMap.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.marker) {\n                    throw Error('Cannot interact with a Google Map Marker before it has been ' +\n                        'initialized. Please wait for the Marker to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapMarker;\n    }());\n    MapMarker.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-marker',\n                    exportAs: 'mapMarker',\n                },] }\n    ];\n    MapMarker.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapMarker.propDecorators = {\n        title: [{ type: core.Input }],\n        position: [{ type: core.Input }],\n        label: [{ type: core.Input }],\n        clickable: [{ type: core.Input }],\n        options: [{ type: core.Input }],\n        animationChanged: [{ type: core.Output }],\n        mapClick: [{ type: core.Output }],\n        clickableChanged: [{ type: core.Output }],\n        cursorChanged: [{ type: core.Output }],\n        mapDblclick: [{ type: core.Output }],\n        mapDrag: [{ type: core.Output }],\n        mapDragend: [{ type: core.Output }],\n        draggableChanged: [{ type: core.Output }],\n        mapDragstart: [{ type: core.Output }],\n        flatChanged: [{ type: core.Output }],\n        iconChanged: [{ type: core.Output }],\n        mapMousedown: [{ type: core.Output }],\n        mapMouseout: [{ type: core.Output }],\n        mapMouseover: [{ type: core.Output }],\n        mapMouseup: [{ type: core.Output }],\n        positionChanged: [{ type: core.Output }],\n        mapRightclick: [{ type: core.Output }],\n        shapeChanged: [{ type: core.Output }],\n        titleChanged: [{ type: core.Output }],\n        visibleChanged: [{ type: core.Output }],\n        zindexChanged: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component for implementing a Google Maps Marker Clusterer.\n     *\n     * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n     */\n    var MapMarkerClusterer = /** @class */ (function () {\n        function MapMarkerClusterer(_googleMap, _ngZone) {\n            this._googleMap = _googleMap;\n            this._ngZone = _ngZone;\n            this._currentMarkers = new Set();\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._destroy = new rxjs.Subject();\n            this.ariaLabelFn = function () { return ''; };\n            /**\n             * See\n             * googlemaps.github.io/v3-utility-library/modules/\n             * _google_markerclustererplus.html#clusteringbegin\n             */\n            this.clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n            /**\n             * See\n             * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n             */\n            this.clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n            this._canInitialize = this._googleMap._isBrowser;\n        }\n        Object.defineProperty(MapMarkerClusterer.prototype, \"averageCenter\", {\n            set: function (averageCenter) {\n                this._averageCenter = averageCenter;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"batchSizeIE\", {\n            set: function (batchSizeIE) {\n                this._batchSizeIE = batchSizeIE;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"calculator\", {\n            set: function (calculator) {\n                this._calculator = calculator;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"clusterClass\", {\n            set: function (clusterClass) {\n                this._clusterClass = clusterClass;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"enableRetinaIcons\", {\n            set: function (enableRetinaIcons) {\n                this._enableRetinaIcons = enableRetinaIcons;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"gridSize\", {\n            set: function (gridSize) {\n                this._gridSize = gridSize;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"ignoreHidden\", {\n            set: function (ignoreHidden) {\n                this._ignoreHidden = ignoreHidden;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"imageExtension\", {\n            set: function (imageExtension) {\n                this._imageExtension = imageExtension;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"imagePath\", {\n            set: function (imagePath) {\n                this._imagePath = imagePath;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"imageSizes\", {\n            set: function (imageSizes) {\n                this._imageSizes = imageSizes;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"maxZoom\", {\n            set: function (maxZoom) {\n                this._maxZoom = maxZoom;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"minimumClusterSize\", {\n            set: function (minimumClusterSize) {\n                this._minimumClusterSize = minimumClusterSize;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"styles\", {\n            set: function (styles) {\n                this._styles = styles;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"title\", {\n            set: function (title) {\n                this._title = title;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"zIndex\", {\n            set: function (zIndex) {\n                this._zIndex = zIndex;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarkerClusterer.prototype, \"zoomOnClick\", {\n            set: function (zoomOnClick) {\n                this._zoomOnClick = zoomOnClick;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapMarkerClusterer.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._canInitialize) {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(function () {\n                    _this.markerClusterer = new MarkerClusterer(_this._googleMap.googleMap, [], _this._combineOptions());\n                });\n                this._assertInitialized();\n                this._eventManager.setTarget(this.markerClusterer);\n            }\n        };\n        MapMarkerClusterer.prototype.ngAfterContentInit = function () {\n            if (this._canInitialize) {\n                this._watchForMarkerChanges();\n            }\n        };\n        MapMarkerClusterer.prototype.ngOnChanges = function (changes) {\n            var _a = this, clusterer = _a.markerClusterer, ariaLabelFn = _a.ariaLabelFn, _averageCenter = _a._averageCenter, _batchSizeIE = _a._batchSizeIE, _calculator = _a._calculator, _styles = _a._styles, _clusterClass = _a._clusterClass, _enableRetinaIcons = _a._enableRetinaIcons, _gridSize = _a._gridSize, _ignoreHidden = _a._ignoreHidden, _imageExtension = _a._imageExtension, _imagePath = _a._imagePath, _imageSizes = _a._imageSizes, _maxZoom = _a._maxZoom, _minimumClusterSize = _a._minimumClusterSize, _title = _a._title, _zIndex = _a._zIndex, _zoomOnClick = _a._zoomOnClick;\n            if (clusterer) {\n                if (changes['ariaLabelFn']) {\n                    clusterer.ariaLabelFn = ariaLabelFn;\n                }\n                if (changes['averageCenter'] && _averageCenter !== undefined) {\n                    clusterer.setAverageCenter(_averageCenter);\n                }\n                if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n                    clusterer.setBatchSizeIE(_batchSizeIE);\n                }\n                if (changes['calculator'] && _calculator) {\n                    clusterer.setCalculator(_calculator);\n                }\n                if (changes['clusterClass'] && _clusterClass !== undefined) {\n                    clusterer.setClusterClass(_clusterClass);\n                }\n                if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n                    clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n                }\n                if (changes['gridSize'] && _gridSize !== undefined) {\n                    clusterer.setGridSize(_gridSize);\n                }\n                if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n                    clusterer.setIgnoreHidden(_ignoreHidden);\n                }\n                if (changes['imageExtension'] && _imageExtension !== undefined) {\n                    clusterer.setImageExtension(_imageExtension);\n                }\n                if (changes['imagePath'] && _imagePath !== undefined) {\n                    clusterer.setImagePath(_imagePath);\n                }\n                if (changes['imageSizes'] && _imageSizes) {\n                    clusterer.setImageSizes(_imageSizes);\n                }\n                if (changes['maxZoom'] && _maxZoom !== undefined) {\n                    clusterer.setMaxZoom(_maxZoom);\n                }\n                if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n                    clusterer.setMinimumClusterSize(_minimumClusterSize);\n                }\n                if (changes['styles'] && _styles) {\n                    clusterer.setStyles(_styles);\n                }\n                if (changes['title'] && _title !== undefined) {\n                    clusterer.setTitle(_title);\n                }\n                if (changes['zIndex'] && _zIndex !== undefined) {\n                    clusterer.setZIndex(_zIndex);\n                }\n                if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n                    clusterer.setZoomOnClick(_zoomOnClick);\n                }\n            }\n        };\n        MapMarkerClusterer.prototype.ngOnDestroy = function () {\n            this._destroy.next();\n            this._destroy.complete();\n            this._eventManager.destroy();\n            if (this.markerClusterer) {\n                this.markerClusterer.setMap(null);\n            }\n        };\n        MapMarkerClusterer.prototype.fitMapToMarkers = function (padding) {\n            this._assertInitialized();\n            this.markerClusterer.fitMapToMarkers(padding);\n        };\n        MapMarkerClusterer.prototype.getAverageCenter = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getAverageCenter();\n        };\n        MapMarkerClusterer.prototype.getBatchSizeIE = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getBatchSizeIE();\n        };\n        MapMarkerClusterer.prototype.getCalculator = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getCalculator();\n        };\n        MapMarkerClusterer.prototype.getClusterClass = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getClusterClass();\n        };\n        MapMarkerClusterer.prototype.getClusters = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getClusters();\n        };\n        MapMarkerClusterer.prototype.getEnableRetinaIcons = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getEnableRetinaIcons();\n        };\n        MapMarkerClusterer.prototype.getGridSize = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getGridSize();\n        };\n        MapMarkerClusterer.prototype.getIgnoreHidden = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getIgnoreHidden();\n        };\n        MapMarkerClusterer.prototype.getImageExtension = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getImageExtension();\n        };\n        MapMarkerClusterer.prototype.getImagePath = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getImagePath();\n        };\n        MapMarkerClusterer.prototype.getImageSizes = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getImageSizes();\n        };\n        MapMarkerClusterer.prototype.getMaxZoom = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getMaxZoom();\n        };\n        MapMarkerClusterer.prototype.getMinimumClusterSize = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getMinimumClusterSize();\n        };\n        MapMarkerClusterer.prototype.getStyles = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getStyles();\n        };\n        MapMarkerClusterer.prototype.getTitle = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getTitle();\n        };\n        MapMarkerClusterer.prototype.getTotalClusters = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getTotalClusters();\n        };\n        MapMarkerClusterer.prototype.getTotalMarkers = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getTotalMarkers();\n        };\n        MapMarkerClusterer.prototype.getZIndex = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getZIndex();\n        };\n        MapMarkerClusterer.prototype.getZoomOnClick = function () {\n            this._assertInitialized();\n            return this.markerClusterer.getZoomOnClick();\n        };\n        MapMarkerClusterer.prototype._combineOptions = function () {\n            return {\n                ariaLabelFn: this.ariaLabelFn,\n                averageCenter: this._averageCenter,\n                batchSize: this.batchSize,\n                batchSizeIE: this._batchSizeIE,\n                calculator: this._calculator,\n                clusterClass: this._clusterClass,\n                enableRetinaIcons: this._enableRetinaIcons,\n                gridSize: this._gridSize,\n                ignoreHidden: this._ignoreHidden,\n                imageExtension: this._imageExtension,\n                imagePath: this._imagePath,\n                imageSizes: this._imageSizes,\n                maxZoom: this._maxZoom,\n                minimumClusterSize: this._minimumClusterSize,\n                styles: this._styles,\n                title: this._title,\n                zIndex: this._zIndex,\n                zoomOnClick: this._zoomOnClick,\n            };\n        };\n        MapMarkerClusterer.prototype._watchForMarkerChanges = function () {\n            var e_1, _a;\n            var _this = this;\n            this._assertInitialized();\n            var initialMarkers = [];\n            try {\n                for (var _b = __values(this._getInternalMarkers(this._markers.toArray())), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var marker = _c.value;\n                    this._currentMarkers.add(marker);\n                    initialMarkers.push(marker);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.markerClusterer.addMarkers(initialMarkers);\n            this._markers.changes.pipe(operators.takeUntil(this._destroy)).subscribe(function (markerComponents) {\n                var e_2, _a, e_3, _b, e_4, _c;\n                _this._assertInitialized();\n                var newMarkers = new Set(_this._getInternalMarkers(markerComponents));\n                var markersToAdd = [];\n                var markersToRemove = [];\n                try {\n                    for (var _d = __values(Array.from(newMarkers)), _e = _d.next(); !_e.done; _e = _d.next()) {\n                        var marker = _e.value;\n                        if (!_this._currentMarkers.has(marker)) {\n                            _this._currentMarkers.add(marker);\n                            markersToAdd.push(marker);\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n                try {\n                    for (var _f = __values(Array.from(_this._currentMarkers)), _g = _f.next(); !_g.done; _g = _f.next()) {\n                        var marker = _g.value;\n                        if (!newMarkers.has(marker)) {\n                            markersToRemove.push(marker);\n                        }\n                    }\n                }\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                finally {\n                    try {\n                        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n                    }\n                    finally { if (e_3) throw e_3.error; }\n                }\n                _this.markerClusterer.addMarkers(markersToAdd, true);\n                _this.markerClusterer.removeMarkers(markersToRemove, true);\n                _this.markerClusterer.repaint();\n                try {\n                    for (var markersToRemove_1 = __values(markersToRemove), markersToRemove_1_1 = markersToRemove_1.next(); !markersToRemove_1_1.done; markersToRemove_1_1 = markersToRemove_1.next()) {\n                        var marker = markersToRemove_1_1.value;\n                        _this._currentMarkers.delete(marker);\n                    }\n                }\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                finally {\n                    try {\n                        if (markersToRemove_1_1 && !markersToRemove_1_1.done && (_c = markersToRemove_1.return)) _c.call(markersToRemove_1);\n                    }\n                    finally { if (e_4) throw e_4.error; }\n                }\n            });\n        };\n        MapMarkerClusterer.prototype._getInternalMarkers = function (markers) {\n            return markers.filter(function (markerComponent) { return !!markerComponent.marker; })\n                .map(function (markerComponent) { return markerComponent.marker; });\n        };\n        MapMarkerClusterer.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._googleMap.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.markerClusterer) {\n                    throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' +\n                        'Please wait for the MarkerClusterer to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapMarkerClusterer;\n    }());\n    MapMarkerClusterer.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'map-marker-clusterer',\n                    exportAs: 'mapMarkerClusterer',\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    encapsulation: core.ViewEncapsulation.None\n                },] }\n    ];\n    MapMarkerClusterer.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapMarkerClusterer.propDecorators = {\n        ariaLabelFn: [{ type: core.Input }],\n        averageCenter: [{ type: core.Input }],\n        batchSize: [{ type: core.Input }],\n        batchSizeIE: [{ type: core.Input }],\n        calculator: [{ type: core.Input }],\n        clusterClass: [{ type: core.Input }],\n        enableRetinaIcons: [{ type: core.Input }],\n        gridSize: [{ type: core.Input }],\n        ignoreHidden: [{ type: core.Input }],\n        imageExtension: [{ type: core.Input }],\n        imagePath: [{ type: core.Input }],\n        imageSizes: [{ type: core.Input }],\n        maxZoom: [{ type: core.Input }],\n        minimumClusterSize: [{ type: core.Input }],\n        styles: [{ type: core.Input }],\n        title: [{ type: core.Input }],\n        zIndex: [{ type: core.Input }],\n        zoomOnClick: [{ type: core.Input }],\n        clusteringbegin: [{ type: core.Output }],\n        clusteringend: [{ type: core.Output }],\n        _markers: [{ type: core.ContentChildren, args: [MapMarker, { descendants: true },] }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n     */\n    var MapPolygon = /** @class */ (function () {\n        function MapPolygon(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._paths = new rxjs.BehaviorSubject(undefined);\n            this._destroyed = new rxjs.Subject();\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n             */\n            this.polygonClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n             */\n            this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n             */\n            this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n             */\n            this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n             */\n            this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n             */\n            this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n             */\n            this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n             */\n            this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n             */\n            this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n             */\n            this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n             */\n            this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n        }\n        Object.defineProperty(MapPolygon.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapPolygon.prototype, \"paths\", {\n            set: function (paths) {\n                this._paths.next(paths);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapPolygon.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.polygon = new google.maps.Polygon(options);\n                    });\n                    _this._assertInitialized();\n                    _this.polygon.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.polygon);\n                });\n                this._watchForOptionsChanges();\n                this._watchForPathChanges();\n            }\n        };\n        MapPolygon.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.polygon) {\n                this.polygon.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n         */\n        MapPolygon.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return this.polygon.getDraggable();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n         */\n        MapPolygon.prototype.getEditable = function () {\n            this._assertInitialized();\n            return this.polygon.getEditable();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n         */\n        MapPolygon.prototype.getPath = function () {\n            this._assertInitialized();\n            return this.polygon.getPath();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n         */\n        MapPolygon.prototype.getPaths = function () {\n            this._assertInitialized();\n            return this.polygon.getPaths();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n         */\n        MapPolygon.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.polygon.getVisible();\n        };\n        MapPolygon.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._paths]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], paths = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { paths: paths || options.paths });\n                return combinedOptions;\n            }));\n        };\n        MapPolygon.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.polygon.setOptions(options);\n            });\n        };\n        MapPolygon.prototype._watchForPathChanges = function () {\n            var _this = this;\n            this._paths.pipe(operators.takeUntil(this._destroyed)).subscribe(function (paths) {\n                if (paths) {\n                    _this._assertInitialized();\n                    _this.polygon.setPaths(paths);\n                }\n            });\n        };\n        MapPolygon.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.polygon) {\n                    throw Error('Cannot interact with a Google Map Polygon before it has been ' +\n                        'initialized. Please wait for the Polygon to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapPolygon;\n    }());\n    MapPolygon.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-polygon',\n                    exportAs: 'mapPolygon',\n                },] }\n    ];\n    MapPolygon.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapPolygon.propDecorators = {\n        options: [{ type: core.Input }],\n        paths: [{ type: core.Input }],\n        polygonClick: [{ type: core.Output }],\n        polygonDblclick: [{ type: core.Output }],\n        polygonDrag: [{ type: core.Output }],\n        polygonDragend: [{ type: core.Output }],\n        polygonDragstart: [{ type: core.Output }],\n        polygonMousedown: [{ type: core.Output }],\n        polygonMousemove: [{ type: core.Output }],\n        polygonMouseout: [{ type: core.Output }],\n        polygonMouseover: [{ type: core.Output }],\n        polygonMouseup: [{ type: core.Output }],\n        polygonRightclick: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n     */\n    var MapPolyline = /** @class */ (function () {\n        function MapPolyline(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._path = new rxjs.BehaviorSubject(undefined);\n            this._destroyed = new rxjs.Subject();\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n             */\n            this.polylineClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n             */\n            this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n             */\n            this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n             */\n            this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n             */\n            this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n             */\n            this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n             */\n            this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n             */\n            this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n             */\n            this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n             */\n            this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n             */\n            this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n        }\n        Object.defineProperty(MapPolyline.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapPolyline.prototype, \"path\", {\n            set: function (path) {\n                this._path.next(path);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapPolyline.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () { return _this.polyline = new google.maps.Polyline(options); });\n                    _this._assertInitialized();\n                    _this.polyline.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.polyline);\n                });\n                this._watchForOptionsChanges();\n                this._watchForPathChanges();\n            }\n        };\n        MapPolyline.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.polyline) {\n                this.polyline.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n         */\n        MapPolyline.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return this.polyline.getDraggable();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n         */\n        MapPolyline.prototype.getEditable = function () {\n            this._assertInitialized();\n            return this.polyline.getEditable();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n         */\n        MapPolyline.prototype.getPath = function () {\n            this._assertInitialized();\n            return this.polyline.getPath();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n         */\n        MapPolyline.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.polyline.getVisible();\n        };\n        MapPolyline.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._path]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], path = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { path: path || options.path });\n                return combinedOptions;\n            }));\n        };\n        MapPolyline.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.polyline.setOptions(options);\n            });\n        };\n        MapPolyline.prototype._watchForPathChanges = function () {\n            var _this = this;\n            this._path.pipe(operators.takeUntil(this._destroyed)).subscribe(function (path) {\n                if (path) {\n                    _this._assertInitialized();\n                    _this.polyline.setPath(path);\n                }\n            });\n        };\n        MapPolyline.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.polyline) {\n                    throw Error('Cannot interact with a Google Map Polyline before it has been ' +\n                        'initialized. Please wait for the Polyline to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapPolyline;\n    }());\n    MapPolyline.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-polyline',\n                    exportAs: 'mapPolyline',\n                },] }\n    ];\n    MapPolyline.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapPolyline.propDecorators = {\n        options: [{ type: core.Input }],\n        path: [{ type: core.Input }],\n        polylineClick: [{ type: core.Output }],\n        polylineDblclick: [{ type: core.Output }],\n        polylineDrag: [{ type: core.Output }],\n        polylineDragend: [{ type: core.Output }],\n        polylineDragstart: [{ type: core.Output }],\n        polylineMousedown: [{ type: core.Output }],\n        polylineMousemove: [{ type: core.Output }],\n        polylineMouseout: [{ type: core.Output }],\n        polylineMouseover: [{ type: core.Output }],\n        polylineMouseup: [{ type: core.Output }],\n        polylineRightclick: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n     */\n    var MapRectangle = /** @class */ (function () {\n        function MapRectangle(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._bounds = new rxjs.BehaviorSubject(undefined);\n            this._destroyed = new rxjs.Subject();\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n             */\n            this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n             */\n            this.rectangleClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n             */\n            this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n             */\n            this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n             */\n            this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n             */\n            this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n             */\n            this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n             */\n            this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n             */\n            this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n             */\n            this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n             */\n            this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n             */\n            this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n        }\n        Object.defineProperty(MapRectangle.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapRectangle.prototype, \"bounds\", {\n            set: function (bounds) {\n                this._bounds.next(bounds);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapRectangle.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.rectangle = new google.maps.Rectangle(options);\n                    });\n                    _this._assertInitialized();\n                    _this.rectangle.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.rectangle);\n                });\n                this._watchForOptionsChanges();\n                this._watchForBoundsChanges();\n            }\n        };\n        MapRectangle.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.rectangle) {\n                this.rectangle.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n         */\n        MapRectangle.prototype.getBounds = function () {\n            this._assertInitialized();\n            return this.rectangle.getBounds();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n         */\n        MapRectangle.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return this.rectangle.getDraggable();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n         */\n        MapRectangle.prototype.getEditable = function () {\n            this._assertInitialized();\n            return this.rectangle.getEditable();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n         */\n        MapRectangle.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.rectangle.getVisible();\n        };\n        MapRectangle.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._bounds]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], bounds = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { bounds: bounds || options.bounds });\n                return combinedOptions;\n            }));\n        };\n        MapRectangle.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.rectangle.setOptions(options);\n            });\n        };\n        MapRectangle.prototype._watchForBoundsChanges = function () {\n            var _this = this;\n            this._bounds.pipe(operators.takeUntil(this._destroyed)).subscribe(function (bounds) {\n                if (bounds) {\n                    _this._assertInitialized();\n                    _this.rectangle.setBounds(bounds);\n                }\n            });\n        };\n        MapRectangle.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.rectangle) {\n                    throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n                        'Please wait for the Rectangle to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapRectangle;\n    }());\n    MapRectangle.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-rectangle',\n                    exportAs: 'mapRectangle',\n                },] }\n    ];\n    MapRectangle.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapRectangle.propDecorators = {\n        options: [{ type: core.Input }],\n        bounds: [{ type: core.Input }],\n        boundsChanged: [{ type: core.Output }],\n        rectangleClick: [{ type: core.Output }],\n        rectangleDblclick: [{ type: core.Output }],\n        rectangleDrag: [{ type: core.Output }],\n        rectangleDragend: [{ type: core.Output }],\n        rectangleDragstart: [{ type: core.Output }],\n        rectangleMousedown: [{ type: core.Output }],\n        rectangleMousemove: [{ type: core.Output }],\n        rectangleMouseout: [{ type: core.Output }],\n        rectangleMouseover: [{ type: core.Output }],\n        rectangleMouseup: [{ type: core.Output }],\n        rectangleRightclick: [{ type: core.Output }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n     */\n    var MapTrafficLayer = /** @class */ (function () {\n        function MapTrafficLayer(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._autoRefresh = new rxjs.BehaviorSubject(true);\n            this._destroyed = new rxjs.Subject();\n        }\n        Object.defineProperty(MapTrafficLayer.prototype, \"autoRefresh\", {\n            /**\n             * Whether the traffic layer refreshes with updated information automatically.\n             */\n            set: function (autoRefresh) {\n                this._autoRefresh.next(autoRefresh);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapTrafficLayer.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.trafficLayer = new google.maps.TrafficLayer(options);\n                    });\n                    _this._assertInitialized();\n                    _this.trafficLayer.setMap(_this._map.googleMap);\n                });\n                this._watchForAutoRefreshChanges();\n            }\n        };\n        MapTrafficLayer.prototype.ngOnDestroy = function () {\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.trafficLayer) {\n                this.trafficLayer.setMap(null);\n            }\n        };\n        MapTrafficLayer.prototype._combineOptions = function () {\n            return this._autoRefresh.pipe(operators.map(function (autoRefresh) {\n                var combinedOptions = { autoRefresh: autoRefresh };\n                return combinedOptions;\n            }));\n        };\n        MapTrafficLayer.prototype._watchForAutoRefreshChanges = function () {\n            var _this = this;\n            this._combineOptions().pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.trafficLayer.setOptions(options);\n            });\n        };\n        MapTrafficLayer.prototype._assertInitialized = function () {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.trafficLayer) {\n                throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n                    'Please wait for the Traffic Layer to load before trying to interact with it.');\n            }\n        };\n        return MapTrafficLayer;\n    }());\n    MapTrafficLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-traffic-layer',\n                    exportAs: 'mapTrafficLayer',\n                },] }\n    ];\n    MapTrafficLayer.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapTrafficLayer.propDecorators = {\n        autoRefresh: [{ type: core.Input }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n     */\n    var MapTransitLayer = /** @class */ (function (_super) {\n        __extends(MapTransitLayer, _super);\n        function MapTransitLayer() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MapTransitLayer.prototype._initializeObject = function () {\n            this.transitLayer = new google.maps.TransitLayer();\n        };\n        MapTransitLayer.prototype._setMap = function () {\n            this._assertLayerInitialized();\n            this.transitLayer.setMap(this._map.googleMap);\n        };\n        MapTransitLayer.prototype._unsetMap = function () {\n            if (this.transitLayer) {\n                this.transitLayer.setMap(null);\n            }\n        };\n        MapTransitLayer.prototype._assertLayerInitialized = function () {\n            if (!this.transitLayer) {\n                throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n                    'Please wait for the Transit Layer to load before trying to interact with it.');\n            }\n        };\n        return MapTransitLayer;\n    }(MapBaseLayer));\n    MapTransitLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-transit-layer',\n                    exportAs: 'mapTransitLayer',\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENTS = [\n        GoogleMap,\n        MapBaseLayer,\n        MapBicyclingLayer,\n        MapCircle,\n        MapGroundOverlay,\n        MapInfoWindow,\n        MapKmlLayer,\n        MapMarker,\n        MapMarkerClusterer,\n        MapPolygon,\n        MapPolyline,\n        MapRectangle,\n        MapTrafficLayer,\n        MapTransitLayer,\n    ];\n    var GoogleMapsModule = /** @class */ (function () {\n        function GoogleMapsModule() {\n        }\n        return GoogleMapsModule;\n    }());\n    GoogleMapsModule.decorators = [\n        { type: core.NgModule, args: [{\n                    declarations: COMPONENTS,\n                    exports: COMPONENTS,\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.GoogleMap = GoogleMap;\n    exports.GoogleMapsModule = GoogleMapsModule;\n    exports.MapBaseLayer = MapBaseLayer;\n    exports.MapBicyclingLayer = MapBicyclingLayer;\n    exports.MapCircle = MapCircle;\n    exports.MapGroundOverlay = MapGroundOverlay;\n    exports.MapInfoWindow = MapInfoWindow;\n    exports.MapKmlLayer = MapKmlLayer;\n    exports.MapMarker = MapMarker;\n    exports.MapMarkerClusterer = MapMarkerClusterer;\n    exports.MapPolygon = MapPolygon;\n    exports.MapPolyline = MapPolyline;\n    exports.MapRectangle = MapRectangle;\n    exports.MapTrafficLayer = MapTrafficLayer;\n    exports.MapTransitLayer = MapTransitLayer;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=google-maps.umd.js.map\n"]}
{"version":3,"sources":["src/google-maps/google-maps.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","googleMaps","core","common","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","MapEventManager","_ngZone","_pending","_listeners","_targetStream","BehaviorSubject","undefined","_clearListeners","e_1","_a","_b","__values","s","length","TypeError","_c","remove","e_1_1","return","getLazyEmitter","name","_this","pipe","switchMap","target","observable","Observable","observer","listener","addListener","event","run","setTarget","currentTarget","forEach","subscriber","subscribe","destroy","complete","DEFAULT_OPTIONS","center","lat","lng","zoom","GoogleMap","_elementRef","platformId","_eventManager","_options","_center","_zoom","_destroy","Subject","height","width","boundsChanged","centerChanged","mapClick","mapDblclick","mapDrag","mapDragend","mapDragstart","headingChanged","idle","maptypeidChanged","mapMousemove","mapMouseout","mapMouseover","projectionChanged","mapRightclick","tilesloaded","tiltChanged","zoomChanged","_isBrowser","isPlatformBrowser","window","defineProperty","set","enumerable","configurable","options","ngOnChanges","_setSize","googleMap","mapTypeId","setMapTypeId","ngOnInit","_mapEl","nativeElement","querySelector","_googleMapChanges","_initializeMap","_combineOptions","_watchForOptionsChanges","_watchForCenterChanges","_watchForZoomChanges","ngOnDestroy","fitBounds","bounds","padding","_assertInitialized","panBy","x","y","panTo","latLng","panToBounds","latLngBounds","getBounds","getCenter","getClickableIcons","getHeading","getMapTypeId","getProjection","getStreetView","getTilt","getZoom","get","controls","data","mapTypes","overlayMapTypes","styles","style","coerceCssPixelValue","combineLatest","map","assign","optionsChanges","take","runOutsideAngular","google","maps","Map","shareReplay","takeUntil","setOptions","setCenter","setZoom","decorators","type","Component","args","selector","exportAs","changeDetection","ChangeDetectionStrategy","OnPush","template","encapsulation","ViewEncapsulation","None","ctorParameters","ElementRef","NgZone","Optional","Inject","PLATFORM_ID","propDecorators","Input","Output","cssUnitsPattern","test","MapBaseLayer","_map","_initializeObject","_setMap","_unsetMap","Error","Directive","MapBicyclingLayer","_super","apply","arguments","bicyclingLayer","BicyclingLayer","_assertLayerInitialized","setMap","MapCircle","_radius","_destroyed","circleClick","circleDblclick","circleDrag","circleDragend","circleDragstart","circleMousedown","circleMousemove","circleMouseout","circleMouseover","circleMouseup","radiusChanged","circleRightclick","radius","circle","Circle","_watchForRadiusChanges","getDraggable","getEditable","getRadius","getVisible","setRadius","MapGroundOverlay","_opacity","_url","clickable","url","opacity","groundOverlay","GroundOverlay","getValue","_watchForOpacityChanges","_watchForUrlChanges","getOpacity","getUrl","setOpacity","overlay","MapInfoWindow","_googleMap","_position","closeclick","contentChanged","domready","positionChanged","zindexChanged","position","infoWindow","InfoWindow","_watchForPositionChanges","close","getContent","getPosition","getZIndex","open","anchor","anchorObject","getAnchor","display","content","setPosition","host","MapKmlLayer","kmlClick","defaultviewportChanged","statusChanged","kmlLayer","KmlLayer","getDefaultViewport","getMetadata","getStatus","setUrl","DEFAULT_MARKER_OPTIONS","MapMarker","_title","_label","_clickable","animationChanged","clickableChanged","cursorChanged","draggableChanged","flatChanged","iconChanged","mapMousedown","mapMouseup","shapeChanged","titleChanged","visibleChanged","title","label","marker","Marker","_watchForTitleChanges","_watchForLabelChanges","_watchForClickableChanges","getAnimation","getClickable","getCursor","getIcon","getLabel","getShape","getTitle","setTitle","setLabel","setClickable","MapPolygon","_paths","polygonClick","polygonDblclick","polygonDrag","polygonDragend","polygonDragstart","polygonMousedown","polygonMousemove","polygonMouseout","polygonMouseover","polygonMouseup","polygonRightclick","paths","polygon","Polygon","_watchForPathChanges","getPath","getPaths","setPaths","MapPolyline","_path","polylineClick","polylineDblclick","polylineDrag","polylineDragend","polylineDragstart","polylineMousedown","polylineMousemove","polylineMouseout","polylineMouseover","polylineMouseup","polylineRightclick","path","polyline","Polyline","setPath","MapRectangle","_bounds","rectangleClick","rectangleDblclick","rectangleDrag","rectangleDragend","rectangleDragstart","rectangleMousedown","rectangleMousemove","rectangleMouseout","rectangleMouseover","rectangleMouseup","rectangleRightclick","rectangle","Rectangle","_watchForBoundsChanges","setBounds","MapTrafficLayer","_autoRefresh","autoRefresh","trafficLayer","TrafficLayer","_watchForAutoRefreshChanges","MapTransitLayer","transitLayer","TransitLayer","GoogleMapsModule","COMPONENTS","NgModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/google-maps', ['exports', '@angular/core', '@angular/common', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.googleMaps = {}), global.ng.core, global.ng.common, global.rxjs, global.rxjs.operators));\n}(this, (function (exports, core, common, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n    /* global Reflect, Promise */\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b)\n                if (b.hasOwnProperty(p))\n                    d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    function __extends(d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n    var __assign = function () {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s)\n                    if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    function __rest(s, e) {\n        var t = {};\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                    t[p[i]] = s[p[i]];\n            }\n        return t;\n    }\n    function __decorate(decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n            r = Reflect.decorate(decorators, target, key, desc);\n        else\n            for (var i = decorators.length - 1; i >= 0; i--)\n                if (d = decorators[i])\n                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    }\n    function __param(paramIndex, decorator) {\n        return function (target, key) { decorator(target, key, paramIndex); };\n    }\n    function __metadata(metadataKey, metadataValue) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n            return Reflect.metadata(metadataKey, metadataValue);\n    }\n    function __awaiter(thisArg, _arguments, P, generator) {\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) { try {\n                step(generator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function rejected(value) { try {\n                step(generator[\"throw\"](value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    }\n    function __generator(thisArg, body) {\n        var _ = { label: 0, sent: function () { if (t[0] & 1)\n                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () { return this; }), g;\n        function verb(n) { return function (v) { return step([n, v]); }; }\n        function step(op) {\n            if (f)\n                throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                        return t;\n                    if (y = 0, t)\n                        op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2])\n                                _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                }\n                catch (e) {\n                    op = [6, e];\n                    y = 0;\n                }\n                finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5)\n                throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    }\n    var __createBinding = Object.create ? (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });\n    }) : (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        o[k2] = m[k];\n    });\n    function __exportStar(m, exports) {\n        for (var p in m)\n            if (p !== \"default\" && !exports.hasOwnProperty(p))\n                __createBinding(exports, m, p);\n    }\n    function __values(o) {\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n        if (m)\n            return m.call(o);\n        if (o && typeof o.length === \"number\")\n            return {\n                next: function () {\n                    if (o && i >= o.length)\n                        o = void 0;\n                    return { value: o && o[i++], done: !o };\n                }\n            };\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    }\n    function __read(o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m)\n            return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n                ar.push(r.value);\n        }\n        catch (error) {\n            e = { error: error };\n        }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"]))\n                    m.call(i);\n            }\n            finally {\n                if (e)\n                    throw e.error;\n            }\n        }\n        return ar;\n    }\n    function __spread() {\n        for (var ar = [], i = 0; i < arguments.length; i++)\n            ar = ar.concat(__read(arguments[i]));\n        return ar;\n    }\n    function __spreadArrays() {\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n            s += arguments[i].length;\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n                r[k] = a[j];\n        return r;\n    }\n    ;\n    function __await(v) {\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\n    }\n    function __asyncGenerator(thisArg, _arguments, generator) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n        function verb(n) { if (g[n])\n            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n        function resume(n, v) { try {\n            step(g[n](v));\n        }\n        catch (e) {\n            settle(q[0][3], e);\n        } }\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n        function fulfill(value) { resume(\"next\", value); }\n        function reject(value) { resume(\"throw\", value); }\n        function settle(f, v) { if (f(v), q.shift(), q.length)\n            resume(q[0][0], q[0][1]); }\n    }\n    function __asyncDelegator(o) {\n        var i, p;\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\n    }\n    function __asyncValues(o) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var m = o[Symbol.asyncIterator], i;\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }\n    }\n    function __makeTemplateObject(cooked, raw) {\n        if (Object.defineProperty) {\n            Object.defineProperty(cooked, \"raw\", { value: raw });\n        }\n        else {\n            cooked.raw = raw;\n        }\n        return cooked;\n    }\n    ;\n    var __setModuleDefault = Object.create ? (function (o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n    }) : function (o, v) {\n        o[\"default\"] = v;\n    };\n    function __importStar(mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    __createBinding(result, mod, k);\n        __setModuleDefault(result, mod);\n        return result;\n    }\n    function __importDefault(mod) {\n        return (mod && mod.__esModule) ? mod : { default: mod };\n    }\n    function __classPrivateFieldGet(receiver, privateMap) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to get private field on non-instance\");\n        }\n        return privateMap.get(receiver);\n    }\n    function __classPrivateFieldSet(receiver, privateMap, value) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to set private field on non-instance\");\n        }\n        privateMap.set(receiver, value);\n        return value;\n    }\n\n    /** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\n    var MapEventManager = /** @class */ (function () {\n        function MapEventManager(_ngZone) {\n            this._ngZone = _ngZone;\n            /** Pending listeners that were added before the target was set. */\n            this._pending = [];\n            this._listeners = [];\n            this._targetStream = new rxjs.BehaviorSubject(undefined);\n        }\n        /** Clears all currently-registered event listeners. */\n        MapEventManager.prototype._clearListeners = function () {\n            var e_1, _a;\n            try {\n                for (var _b = __values(this._listeners), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var listener = _c.value;\n                    listener.remove();\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this._listeners = [];\n        };\n        /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n        MapEventManager.prototype.getLazyEmitter = function (name) {\n            var _this = this;\n            return this._targetStream.pipe(operators.switchMap(function (target) {\n                var observable = new rxjs.Observable(function (observer) {\n                    // If the target hasn't been initialized yet, cache the observer so it can be added later.\n                    if (!target) {\n                        _this._pending.push({ observable: observable, observer: observer });\n                        return undefined;\n                    }\n                    var listener = target.addListener(name, function (event) {\n                        _this._ngZone.run(function () { return observer.next(event); });\n                    });\n                    _this._listeners.push(listener);\n                    return function () { return listener.remove(); };\n                });\n                return observable;\n            }));\n        };\n        /** Sets the current target that the manager should bind events to. */\n        MapEventManager.prototype.setTarget = function (target) {\n            var currentTarget = this._targetStream.value;\n            if (target === currentTarget) {\n                return;\n            }\n            // Clear the listeners from the pre-existing target.\n            if (currentTarget) {\n                this._clearListeners();\n                this._pending = [];\n            }\n            this._targetStream.next(target);\n            // Add the listeners that were bound before the map was initialized.\n            this._pending.forEach(function (subscriber) { return subscriber.observable.subscribe(subscriber.observer); });\n            this._pending = [];\n        };\n        /** Destroys the manager and clears the event listeners. */\n        MapEventManager.prototype.destroy = function () {\n            this._clearListeners();\n            this._pending = [];\n            this._targetStream.complete();\n        };\n        return MapEventManager;\n    }());\n\n    /** default options set to the Googleplex */\n    var DEFAULT_OPTIONS = {\n        center: { lat: 37.421995, lng: -122.084092 },\n        zoom: 17\n    };\n    /** Arbitrary default height for the map element */\n    var DEFAULT_HEIGHT = '500px';\n    /** Arbitrary default width for the map element */\n    var DEFAULT_WIDTH = '500px';\n    /**\n     * Angular component that renders a Google Map via the Google Maps JavaScript\n     * API.\n     * @see https://developers.google.com/maps/documentation/javascript/reference/\n     */\n    var GoogleMap = /** @class */ (function () {\n        function GoogleMap(_elementRef, _ngZone, \n        /**\n         * @deprecated `platformId` parameter to become required.\n         * @breaking-change 10.0.0\n         */\n        platformId) {\n            this._elementRef = _elementRef;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject(DEFAULT_OPTIONS);\n            this._center = new rxjs.BehaviorSubject(undefined);\n            this._zoom = new rxjs.BehaviorSubject(undefined);\n            this._destroy = new rxjs.Subject();\n            /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n            this.height = DEFAULT_HEIGHT;\n            /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n            this.width = DEFAULT_WIDTH;\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n             */\n            this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n             */\n            this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n             */\n            this.mapClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n             */\n            this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n             */\n            this.mapDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n             */\n            this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n             */\n            this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n             */\n            this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n             */\n            this.idle = this._eventManager.getLazyEmitter('idle');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n             */\n            this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n             */\n            this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n             */\n            this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n             */\n            this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n             */\n            this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n             */\n            this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n             */\n            this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n             */\n            this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n             */\n            this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n            // @breaking-change 10.0.0 Remove null check for `platformId`.\n            this._isBrowser =\n                platformId ? common.isPlatformBrowser(platformId) : typeof window === 'object' && !!window;\n            if (this._isBrowser) {\n                var googleMapsWindow = window;\n                if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw Error('Namespace google not found, cannot construct embedded google ' +\n                        'map. Please install the Google Maps JavaScript API: ' +\n                        'https://developers.google.com/maps/documentation/javascript/' +\n                        'tutorial#Loading_the_Maps_API');\n                }\n            }\n        }\n        Object.defineProperty(GoogleMap.prototype, \"center\", {\n            set: function (center) {\n                this._center.next(center);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"zoom\", {\n            set: function (zoom) {\n                this._zoom.next(zoom);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || DEFAULT_OPTIONS);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        GoogleMap.prototype.ngOnChanges = function () {\n            this._setSize();\n            if (this.googleMap && this.mapTypeId) {\n                this.googleMap.setMapTypeId(this.mapTypeId);\n            }\n        };\n        GoogleMap.prototype.ngOnInit = function () {\n            var _this = this;\n            // It should be a noop during server-side rendering.\n            if (this._isBrowser) {\n                this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n                this._setSize();\n                this._googleMapChanges = this._initializeMap(this._combineOptions());\n                this._googleMapChanges.subscribe(function (googleMap) {\n                    _this.googleMap = googleMap;\n                    _this._eventManager.setTarget(_this.googleMap);\n                });\n                this._watchForOptionsChanges();\n                this._watchForCenterChanges();\n                this._watchForZoomChanges();\n            }\n        };\n        GoogleMap.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroy.next();\n            this._destroy.complete();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n         */\n        GoogleMap.prototype.fitBounds = function (bounds, padding) {\n            this._assertInitialized();\n            this.googleMap.fitBounds(bounds, padding);\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n         */\n        GoogleMap.prototype.panBy = function (x, y) {\n            this._assertInitialized();\n            this.googleMap.panBy(x, y);\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n         */\n        GoogleMap.prototype.panTo = function (latLng) {\n            this._assertInitialized();\n            this.googleMap.panTo(latLng);\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n         */\n        GoogleMap.prototype.panToBounds = function (latLngBounds, padding) {\n            this._assertInitialized();\n            this.googleMap.panToBounds(latLngBounds, padding);\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n         */\n        GoogleMap.prototype.getBounds = function () {\n            this._assertInitialized();\n            return this.googleMap.getBounds() || null;\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n         */\n        GoogleMap.prototype.getCenter = function () {\n            this._assertInitialized();\n            return this.googleMap.getCenter();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n         */\n        GoogleMap.prototype.getClickableIcons = function () {\n            this._assertInitialized();\n            return this.googleMap.getClickableIcons();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n         */\n        GoogleMap.prototype.getHeading = function () {\n            this._assertInitialized();\n            return this.googleMap.getHeading();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n         */\n        GoogleMap.prototype.getMapTypeId = function () {\n            this._assertInitialized();\n            return this.googleMap.getMapTypeId();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n         */\n        GoogleMap.prototype.getProjection = function () {\n            this._assertInitialized();\n            return this.googleMap.getProjection();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n         */\n        GoogleMap.prototype.getStreetView = function () {\n            this._assertInitialized();\n            return this.googleMap.getStreetView();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n         */\n        GoogleMap.prototype.getTilt = function () {\n            this._assertInitialized();\n            return this.googleMap.getTilt();\n        };\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n         */\n        GoogleMap.prototype.getZoom = function () {\n            this._assertInitialized();\n            return this.googleMap.getZoom();\n        };\n        Object.defineProperty(GoogleMap.prototype, \"controls\", {\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n             */\n            get: function () {\n                this._assertInitialized();\n                return this.googleMap.controls;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"data\", {\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n             */\n            get: function () {\n                this._assertInitialized();\n                return this.googleMap.data;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"mapTypes\", {\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n             */\n            get: function () {\n                this._assertInitialized();\n                return this.googleMap.mapTypes;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(GoogleMap.prototype, \"overlayMapTypes\", {\n            /**\n             * See\n             * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n             */\n            get: function () {\n                this._assertInitialized();\n                return this.googleMap.overlayMapTypes;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        GoogleMap.prototype._setSize = function () {\n            if (this._mapEl) {\n                var styles = this._mapEl.style;\n                styles.height =\n                    this.height === null ? '' : (coerceCssPixelValue(this.height) || DEFAULT_HEIGHT);\n                styles.width = this.width === null ? '' : (coerceCssPixelValue(this.width) || DEFAULT_WIDTH);\n            }\n        };\n        /** Combines the center and zoom and the other map options into a single object */\n        GoogleMap.prototype._combineOptions = function () {\n            var _this = this;\n            return rxjs.combineLatest([this._options, this._center, this._zoom])\n                .pipe(operators.map(function (_b) {\n                var _c = __read(_b, 3), options = _c[0], center = _c[1], zoom = _c[2];\n                var _a;\n                var combinedOptions = Object.assign(Object.assign({}, options), {\n                    // It's important that we set **some** kind of `center` and `zoom`, otherwise\n                    // Google Maps will render a blank rectangle which looks broken.\n                    center: center || options.center || DEFAULT_OPTIONS.center, zoom: (_a = zoom !== null && zoom !== void 0 ? zoom : options.zoom) !== null && _a !== void 0 ? _a : DEFAULT_OPTIONS.zoom, mapTypeId: _this.mapTypeId\n                });\n                return combinedOptions;\n            }));\n        };\n        GoogleMap.prototype._initializeMap = function (optionsChanges) {\n            var _this = this;\n            return optionsChanges.pipe(operators.take(1), operators.map(function (options) {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                return _this._ngZone.runOutsideAngular(function () { return new google.maps.Map(_this._mapEl, options); });\n            }), operators.shareReplay(1));\n        };\n        GoogleMap.prototype._watchForOptionsChanges = function () {\n            rxjs.combineLatest([this._googleMapChanges, this._options])\n                .pipe(operators.takeUntil(this._destroy))\n                .subscribe(function (_b) {\n                var _c = __read(_b, 2), googleMap = _c[0], options = _c[1];\n                googleMap.setOptions(options);\n            });\n        };\n        GoogleMap.prototype._watchForCenterChanges = function () {\n            rxjs.combineLatest([this._googleMapChanges, this._center])\n                .pipe(operators.takeUntil(this._destroy))\n                .subscribe(function (_b) {\n                var _c = __read(_b, 2), googleMap = _c[0], center = _c[1];\n                if (center) {\n                    googleMap.setCenter(center);\n                }\n            });\n        };\n        GoogleMap.prototype._watchForZoomChanges = function () {\n            rxjs.combineLatest([this._googleMapChanges, this._zoom])\n                .pipe(operators.takeUntil(this._destroy))\n                .subscribe(function (_b) {\n                var _c = __read(_b, 2), googleMap = _c[0], zoom = _c[1];\n                if (zoom !== undefined) {\n                    googleMap.setZoom(zoom);\n                }\n            });\n        };\n        /** Asserts that the map has been initialized. */\n        GoogleMap.prototype._assertInitialized = function () {\n            if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n        };\n        return GoogleMap;\n    }());\n    GoogleMap.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'google-map',\n                    exportAs: 'googleMap',\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n                    encapsulation: core.ViewEncapsulation.None\n                },] }\n    ];\n    GoogleMap.ctorParameters = function () { return [\n        { type: core.ElementRef },\n        { type: core.NgZone },\n        { type: Object, decorators: [{ type: core.Optional }, { type: core.Inject, args: [core.PLATFORM_ID,] }] }\n    ]; };\n    GoogleMap.propDecorators = {\n        height: [{ type: core.Input }],\n        width: [{ type: core.Input }],\n        mapTypeId: [{ type: core.Input }],\n        center: [{ type: core.Input }],\n        zoom: [{ type: core.Input }],\n        options: [{ type: core.Input }],\n        boundsChanged: [{ type: core.Output }],\n        centerChanged: [{ type: core.Output }],\n        mapClick: [{ type: core.Output }],\n        mapDblclick: [{ type: core.Output }],\n        mapDrag: [{ type: core.Output }],\n        mapDragend: [{ type: core.Output }],\n        mapDragstart: [{ type: core.Output }],\n        headingChanged: [{ type: core.Output }],\n        idle: [{ type: core.Output }],\n        maptypeidChanged: [{ type: core.Output }],\n        mapMousemove: [{ type: core.Output }],\n        mapMouseout: [{ type: core.Output }],\n        mapMouseover: [{ type: core.Output }],\n        projectionChanged: [{ type: core.Output }],\n        mapRightclick: [{ type: core.Output }],\n        tilesloaded: [{ type: core.Output }],\n        tiltChanged: [{ type: core.Output }],\n        zoomChanged: [{ type: core.Output }]\n    };\n    var cssUnitsPattern = /([A-Za-z%]+)$/;\n    /** Coerces a value to a CSS pixel value. */\n    function coerceCssPixelValue(value) {\n        if (value == null) {\n            return '';\n        }\n        return cssUnitsPattern.test(value) ? value : value + \"px\";\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MapBaseLayer = /** @class */ (function () {\n        function MapBaseLayer(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n        }\n        MapBaseLayer.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._ngZone.runOutsideAngular(function () {\n                    _this._initializeObject();\n                });\n                this._assertInitialized();\n                this._setMap();\n            }\n        };\n        MapBaseLayer.prototype.ngOnDestroy = function () {\n            this._unsetMap();\n        };\n        MapBaseLayer.prototype._assertInitialized = function () {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n        };\n        MapBaseLayer.prototype._initializeObject = function () { };\n        MapBaseLayer.prototype._setMap = function () { };\n        MapBaseLayer.prototype._unsetMap = function () { };\n        return MapBaseLayer;\n    }());\n    MapBaseLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-base-layer',\n                    exportAs: 'mapBaseLayer',\n                },] }\n    ];\n    MapBaseLayer.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n\n    /**\n     * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n     */\n    var MapBicyclingLayer = /** @class */ (function (_super) {\n        __extends(MapBicyclingLayer, _super);\n        function MapBicyclingLayer() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MapBicyclingLayer.prototype._initializeObject = function () {\n            this.bicyclingLayer = new google.maps.BicyclingLayer();\n        };\n        MapBicyclingLayer.prototype._setMap = function () {\n            this._assertLayerInitialized();\n            this.bicyclingLayer.setMap(this._map.googleMap);\n        };\n        MapBicyclingLayer.prototype._unsetMap = function () {\n            if (this.bicyclingLayer) {\n                this.bicyclingLayer.setMap(null);\n            }\n        };\n        MapBicyclingLayer.prototype._assertLayerInitialized = function () {\n            if (!this.bicyclingLayer) {\n                throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n                    'Please wait for the Transit Layer to load before trying to interact with it.');\n            }\n        };\n        return MapBicyclingLayer;\n    }(MapBaseLayer));\n    MapBicyclingLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-bicycling-layer',\n                    exportAs: 'mapBicyclingLayer',\n                },] }\n    ];\n\n    /**\n     * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n     * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n     */\n    var MapCircle = /** @class */ (function () {\n        function MapCircle(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._center = new rxjs.BehaviorSubject(undefined);\n            this._radius = new rxjs.BehaviorSubject(undefined);\n            this._destroyed = new rxjs.Subject();\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n             */\n            this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n             */\n            this.circleClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n             */\n            this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n             */\n            this.circleDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n             */\n            this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n             */\n            this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n             */\n            this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n             */\n            this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n             */\n            this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n             */\n            this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n             */\n            this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n             */\n            this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n            /**\n             * @see\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n             */\n            this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n        }\n        Object.defineProperty(MapCircle.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapCircle.prototype, \"center\", {\n            set: function (center) {\n                this._center.next(center);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapCircle.prototype, \"radius\", {\n            set: function (radius) {\n                this._radius.next(radius);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapCircle.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.circle = new google.maps.Circle(options);\n                    });\n                    _this._assertInitialized();\n                    _this.circle.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.circle);\n                });\n                this._watchForOptionsChanges();\n                this._watchForCenterChanges();\n                this._watchForRadiusChanges();\n            }\n        };\n        MapCircle.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.circle) {\n                this.circle.setMap(null);\n            }\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n         */\n        MapCircle.prototype.getBounds = function () {\n            this._assertInitialized();\n            return this.circle.getBounds();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n         */\n        MapCircle.prototype.getCenter = function () {\n            this._assertInitialized();\n            return this.circle.getCenter();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n         */\n        MapCircle.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return this.circle.getDraggable();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n         */\n        MapCircle.prototype.getEditable = function () {\n            this._assertInitialized();\n            return this.circle.getEditable();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n         */\n        MapCircle.prototype.getRadius = function () {\n            this._assertInitialized();\n            return this.circle.getRadius();\n        };\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n         */\n        MapCircle.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.circle.getVisible();\n        };\n        MapCircle.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._center, this._radius])\n                .pipe(operators.map(function (_a) {\n                var _b = __read(_a, 3), options = _b[0], center = _b[1], radius = _b[2];\n                var combinedOptions = Object.assign(Object.assign({}, options), { center: center || options.center, radius: radius !== undefined ? radius : options.radius });\n                return combinedOptions;\n            }));\n        };\n        MapCircle.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.circle.setOptions(options);\n            });\n        };\n        MapCircle.prototype._watchForCenterChanges = function () {\n            var _this = this;\n            this._center.pipe(operators.takeUntil(this._destroyed)).subscribe(function (center) {\n                if (center) {\n                    _this._assertInitialized();\n                    _this.circle.setCenter(center);\n                }\n            });\n        };\n        MapCircle.prototype._watchForRadiusChanges = function () {\n            var _this = this;\n            this._radius.pipe(operators.takeUntil(this._destroyed)).subscribe(function (radius) {\n                if (radius !== undefined) {\n                    _this._assertInitialized();\n                    _this.circle.setRadius(radius);\n                }\n            });\n        };\n        MapCircle.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.circle) {\n                    throw Error('Cannot interact with a Google Map Circle before it has been ' +\n                        'initialized. Please wait for the Circle to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapCircle;\n    }());\n    MapCircle.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-circle',\n                    exportAs: 'mapCircle',\n                },] }\n    ];\n    MapCircle.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapCircle.propDecorators = {\n        options: [{ type: core.Input }],\n        center: [{ type: core.Input }],\n        radius: [{ type: core.Input }],\n        centerChanged: [{ type: core.Output }],\n        circleClick: [{ type: core.Output }],\n        circleDblclick: [{ type: core.Output }],\n        circleDrag: [{ type: core.Output }],\n        circleDragend: [{ type: core.Output }],\n        circleDragstart: [{ type: core.Output }],\n        circleMousedown: [{ type: core.Output }],\n        circleMousemove: [{ type: core.Output }],\n        circleMouseout: [{ type: core.Output }],\n        circleMouseover: [{ type: core.Output }],\n        circleMouseup: [{ type: core.Output }],\n        radiusChanged: [{ type: core.Output }],\n        circleRightclick: [{ type: core.Output }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n     */\n    var MapGroundOverlay = /** @class */ (function () {\n        function MapGroundOverlay(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._opacity = new rxjs.BehaviorSubject(1);\n            this._url = new rxjs.BehaviorSubject('');\n            this._destroyed = new rxjs.Subject();\n            /** Whether the overlay is clickable */\n            this.clickable = false;\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n             */\n            this.mapClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/image-overlay\n             * #GroundOverlay.dblclick\n             */\n            this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        }\n        Object.defineProperty(MapGroundOverlay.prototype, \"url\", {\n            /** URL of the image that will be shown in the overlay. */\n            set: function (url) {\n                this._url.next(url);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapGroundOverlay.prototype, \"opacity\", {\n            /** Opacity of the overlay. */\n            set: function (opacity) {\n                this._opacity.next(opacity);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapGroundOverlay.prototype.ngOnInit = function () {\n            var _this = this;\n            if (!this.bounds && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Image bounds are required');\n            }\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.groundOverlay =\n                            new google.maps.GroundOverlay(_this._url.getValue(), _this.bounds, options);\n                    });\n                    _this._assertInitialized();\n                    _this.groundOverlay.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.groundOverlay);\n                });\n                this._watchForOpacityChanges();\n                this._watchForUrlChanges();\n            }\n        };\n        MapGroundOverlay.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.groundOverlay) {\n                this.groundOverlay.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.getBounds\n         */\n        MapGroundOverlay.prototype.getBounds = function () {\n            this._assertInitialized();\n            return this.groundOverlay.getBounds();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.getOpacity\n         */\n        MapGroundOverlay.prototype.getOpacity = function () {\n            this._assertInitialized();\n            return this.groundOverlay.getOpacity();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.getUrl\n         */\n        MapGroundOverlay.prototype.getUrl = function () {\n            this._assertInitialized();\n            return this.groundOverlay.getUrl();\n        };\n        MapGroundOverlay.prototype._combineOptions = function () {\n            var _this = this;\n            return this._opacity.pipe(operators.map(function (opacity) {\n                var combinedOptions = {\n                    clickable: _this.clickable,\n                    opacity: opacity,\n                };\n                return combinedOptions;\n            }));\n        };\n        MapGroundOverlay.prototype._watchForOpacityChanges = function () {\n            var _this = this;\n            this._opacity.pipe(operators.takeUntil(this._destroyed)).subscribe(function (opacity) {\n                if (opacity) {\n                    _this._assertInitialized();\n                    _this.groundOverlay.setOpacity(opacity);\n                }\n            });\n        };\n        MapGroundOverlay.prototype._watchForUrlChanges = function () {\n            var _this = this;\n            this._url.pipe(operators.takeUntil(this._destroyed)).subscribe(function (url) {\n                _this._assertInitialized();\n                var overlay = _this.groundOverlay;\n                overlay.set('url', url);\n                // Google Maps only redraws the overlay if we re-set the map.\n                overlay.setMap(null);\n                overlay.setMap(_this._map.googleMap);\n            });\n        };\n        MapGroundOverlay.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.groundOverlay) {\n                    throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n                        'Please wait for the GroundOverlay to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapGroundOverlay;\n    }());\n    MapGroundOverlay.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-ground-overlay',\n                    exportAs: 'mapGroundOverlay',\n                },] }\n    ];\n    MapGroundOverlay.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapGroundOverlay.propDecorators = {\n        url: [{ type: core.Input }],\n        bounds: [{ type: core.Input }],\n        clickable: [{ type: core.Input }],\n        opacity: [{ type: core.Input }],\n        mapClick: [{ type: core.Output }],\n        mapDblclick: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/info-window\n     */\n    var MapInfoWindow = /** @class */ (function () {\n        function MapInfoWindow(_googleMap, _elementRef, _ngZone) {\n            this._googleMap = _googleMap;\n            this._elementRef = _elementRef;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._position = new rxjs.BehaviorSubject(undefined);\n            this._destroy = new rxjs.Subject();\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n             */\n            this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window\n             * #InfoWindow.content_changed\n             */\n            this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n             */\n            this.domready = this._eventManager.getLazyEmitter('domready');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window\n             * #InfoWindow.position_changed\n             */\n            this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/info-window\n             * #InfoWindow.zindex_changed\n             */\n            this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n        }\n        Object.defineProperty(MapInfoWindow.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapInfoWindow.prototype, \"position\", {\n            set: function (position) {\n                this._position.next(position);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapInfoWindow.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._googleMap._isBrowser) {\n                var combinedOptionsChanges = this._combineOptions();\n                combinedOptionsChanges.pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.infoWindow = new google.maps.InfoWindow(options);\n                    });\n                    _this._eventManager.setTarget(_this.infoWindow);\n                });\n                this._watchForOptionsChanges();\n                this._watchForPositionChanges();\n            }\n        };\n        MapInfoWindow.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroy.next();\n            this._destroy.complete();\n            // If no info window has been created on the server, we do not try closing it.\n            // On the server, an info window cannot be created and this would cause errors.\n            if (this.infoWindow) {\n                this.close();\n            }\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n         */\n        MapInfoWindow.prototype.close = function () {\n            this._assertInitialized();\n            this.infoWindow.close();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n         */\n        MapInfoWindow.prototype.getContent = function () {\n            this._assertInitialized();\n            return this.infoWindow.getContent();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.getPosition\n         */\n        MapInfoWindow.prototype.getPosition = function () {\n            this._assertInitialized();\n            return this.infoWindow.getPosition();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n         */\n        MapInfoWindow.prototype.getZIndex = function () {\n            this._assertInitialized();\n            return this.infoWindow.getZIndex();\n        };\n        /**\n         * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n         * then the position property of the options input is used instead.\n         */\n        MapInfoWindow.prototype.open = function (anchor) {\n            this._assertInitialized();\n            var anchorObject = anchor ? anchor.getAnchor() : undefined;\n            // Prevent the info window from initializing if trying to reopen on the same anchor.\n            if (this.infoWindow.get('anchor') !== anchorObject) {\n                this._elementRef.nativeElement.style.display = '';\n                this.infoWindow.open(this._googleMap.googleMap, anchorObject);\n            }\n        };\n        MapInfoWindow.prototype._combineOptions = function () {\n            var _this = this;\n            return rxjs.combineLatest([this._options, this._position]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], position = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { position: position || options.position, content: _this._elementRef.nativeElement });\n                return combinedOptions;\n            }));\n        };\n        MapInfoWindow.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroy)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.infoWindow.setOptions(options);\n            });\n        };\n        MapInfoWindow.prototype._watchForPositionChanges = function () {\n            var _this = this;\n            this._position.pipe(operators.takeUntil(this._destroy)).subscribe(function (position) {\n                if (position) {\n                    _this._assertInitialized();\n                    _this.infoWindow.setPosition(position);\n                }\n            });\n        };\n        MapInfoWindow.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._googleMap.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.infoWindow) {\n                    throw Error('Cannot interact with a Google Map Info Window before it has been ' +\n                        'initialized. Please wait for the Info Window to load before trying to interact with ' +\n                        'it.');\n                }\n            }\n        };\n        return MapInfoWindow;\n    }());\n    MapInfoWindow.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-info-window',\n                    exportAs: 'mapInfoWindow',\n                    host: { 'style': 'display: none' },\n                },] }\n    ];\n    MapInfoWindow.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.ElementRef },\n        { type: core.NgZone }\n    ]; };\n    MapInfoWindow.propDecorators = {\n        options: [{ type: core.Input }],\n        position: [{ type: core.Input }],\n        closeclick: [{ type: core.Output }],\n        contentChanged: [{ type: core.Output }],\n        domready: [{ type: core.Output }],\n        positionChanged: [{ type: core.Output }],\n        zindexChanged: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n     */\n    var MapKmlLayer = /** @class */ (function () {\n        function MapKmlLayer(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._url = new rxjs.BehaviorSubject('');\n            this._destroyed = new rxjs.Subject();\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n             */\n            this.kmlClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/kml\n             * #KmlLayer.defaultviewport_changed\n             */\n            this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n             */\n            this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n        }\n        Object.defineProperty(MapKmlLayer.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapKmlLayer.prototype, \"url\", {\n            set: function (url) {\n                this._url.next(url);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapKmlLayer.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () { return _this.kmlLayer = new google.maps.KmlLayer(options); });\n                    _this._assertInitialized();\n                    _this.kmlLayer.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.kmlLayer);\n                });\n                this._watchForOptionsChanges();\n                this._watchForUrlChanges();\n            }\n        };\n        MapKmlLayer.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.kmlLayer) {\n                this.kmlLayer.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n         */\n        MapKmlLayer.prototype.getDefaultViewport = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getDefaultViewport();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n         */\n        MapKmlLayer.prototype.getMetadata = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getMetadata();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n         */\n        MapKmlLayer.prototype.getStatus = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getStatus();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n         */\n        MapKmlLayer.prototype.getUrl = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getUrl();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n         */\n        MapKmlLayer.prototype.getZIndex = function () {\n            this._assertInitialized();\n            return this.kmlLayer.getZIndex();\n        };\n        MapKmlLayer.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._url]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], url = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { url: url || options.url });\n                return combinedOptions;\n            }));\n        };\n        MapKmlLayer.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                if (_this.kmlLayer) {\n                    _this._assertInitialized();\n                    _this.kmlLayer.setOptions(options);\n                }\n            });\n        };\n        MapKmlLayer.prototype._watchForUrlChanges = function () {\n            var _this = this;\n            this._url.pipe(operators.takeUntil(this._destroyed)).subscribe(function (url) {\n                if (url && _this.kmlLayer) {\n                    _this._assertInitialized();\n                    _this.kmlLayer.setUrl(url);\n                }\n            });\n        };\n        MapKmlLayer.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.kmlLayer) {\n                    throw Error('Cannot interact with a Google Map KmlLayer before it has been ' +\n                        'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapKmlLayer;\n    }());\n    MapKmlLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-kml-layer',\n                    exportAs: 'mapKmlLayer',\n                },] }\n    ];\n    MapKmlLayer.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapKmlLayer.propDecorators = {\n        options: [{ type: core.Input }],\n        url: [{ type: core.Input }],\n        kmlClick: [{ type: core.Output }],\n        defaultviewportChanged: [{ type: core.Output }],\n        statusChanged: [{ type: core.Output }]\n    };\n\n    /**\n     * Default options for the Google Maps marker component. Displays a marker\n     * at the Googleplex.\n     */\n    var DEFAULT_MARKER_OPTIONS = {\n        position: { lat: 37.421995, lng: -122.084092 },\n    };\n    /**\n     * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/marker\n     */\n    var MapMarker = /** @class */ (function () {\n        function MapMarker(_googleMap, _ngZone) {\n            this._googleMap = _googleMap;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject(DEFAULT_MARKER_OPTIONS);\n            this._title = new rxjs.BehaviorSubject(undefined);\n            this._position = new rxjs.BehaviorSubject(undefined);\n            this._label = new rxjs.BehaviorSubject(undefined);\n            this._clickable = new rxjs.BehaviorSubject(undefined);\n            this._destroy = new rxjs.Subject();\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n             */\n            this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n             */\n            this.mapClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n             */\n            this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n             */\n            this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n             */\n            this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n             */\n            this.mapDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n             */\n            this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n             */\n            this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n             */\n            this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n             */\n            this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n             */\n            this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n             */\n            this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n             */\n            this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n             */\n            this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n             */\n            this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n             */\n            this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n             */\n            this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n             */\n            this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n             */\n            this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n             */\n            this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n             */\n            this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n        }\n        Object.defineProperty(MapMarker.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || DEFAULT_MARKER_OPTIONS);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarker.prototype, \"title\", {\n            set: function (title) {\n                this._title.next(title);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarker.prototype, \"position\", {\n            set: function (position) {\n                this._position.next(position);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarker.prototype, \"label\", {\n            set: function (label) {\n                this._label.next(label);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapMarker.prototype, \"clickable\", {\n            set: function (clickable) {\n                this._clickable.next(clickable);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapMarker.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._googleMap._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () { return _this.marker = new google.maps.Marker(options); });\n                    _this._assertInitialized();\n                    _this.marker.setMap(_this._googleMap.googleMap);\n                    _this._eventManager.setTarget(_this.marker);\n                });\n                this._watchForOptionsChanges();\n                this._watchForTitleChanges();\n                this._watchForPositionChanges();\n                this._watchForLabelChanges();\n                this._watchForClickableChanges();\n            }\n        };\n        MapMarker.prototype.ngOnDestroy = function () {\n            this._destroy.next();\n            this._destroy.complete();\n            this._eventManager.destroy();\n            if (this.marker) {\n                this.marker.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n         */\n        MapMarker.prototype.getAnimation = function () {\n            this._assertInitialized();\n            return this.marker.getAnimation() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n         */\n        MapMarker.prototype.getClickable = function () {\n            this._assertInitialized();\n            return this.marker.getClickable();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n         */\n        MapMarker.prototype.getCursor = function () {\n            this._assertInitialized();\n            return this.marker.getCursor() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n         */\n        MapMarker.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return !!this.marker.getDraggable();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n         */\n        MapMarker.prototype.getIcon = function () {\n            this._assertInitialized();\n            return this.marker.getIcon() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n         */\n        MapMarker.prototype.getLabel = function () {\n            this._assertInitialized();\n            return this.marker.getLabel() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n         */\n        MapMarker.prototype.getOpacity = function () {\n            this._assertInitialized();\n            return this.marker.getOpacity() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n         */\n        MapMarker.prototype.getPosition = function () {\n            this._assertInitialized();\n            return this.marker.getPosition() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n         */\n        MapMarker.prototype.getShape = function () {\n            this._assertInitialized();\n            return this.marker.getShape() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n         */\n        MapMarker.prototype.getTitle = function () {\n            this._assertInitialized();\n            return this.marker.getTitle() || null;\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n         */\n        MapMarker.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.marker.getVisible();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n         */\n        MapMarker.prototype.getZIndex = function () {\n            this._assertInitialized();\n            return this.marker.getZIndex() || null;\n        };\n        /** Gets the anchor point that can be used to attach other Google Maps objects. */\n        MapMarker.prototype.getAnchor = function () {\n            this._assertInitialized();\n            return this.marker;\n        };\n        MapMarker.prototype._combineOptions = function () {\n            var _this = this;\n            return rxjs.combineLatest([this._options, this._title, this._position, this._label, this._clickable])\n                .pipe(operators.map(function (_a) {\n                var _b = __read(_a, 5), options = _b[0], title = _b[1], position = _b[2], label = _b[3], clickable = _b[4];\n                var combinedOptions = Object.assign(Object.assign({}, options), { title: title || options.title, position: position || options.position, label: label || options.label, clickable: clickable !== undefined ? clickable : options.clickable, map: _this._googleMap.googleMap });\n                return combinedOptions;\n            }));\n        };\n        MapMarker.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroy)).subscribe(function (options) {\n                if (_this.marker) {\n                    _this._assertInitialized();\n                    _this.marker.setOptions(options);\n                }\n            });\n        };\n        MapMarker.prototype._watchForTitleChanges = function () {\n            var _this = this;\n            this._title.pipe(operators.takeUntil(this._destroy)).subscribe(function (title) {\n                if (_this.marker && title !== undefined) {\n                    _this._assertInitialized();\n                    _this.marker.setTitle(title);\n                }\n            });\n        };\n        MapMarker.prototype._watchForPositionChanges = function () {\n            var _this = this;\n            this._position.pipe(operators.takeUntil(this._destroy)).subscribe(function (position) {\n                if (_this.marker && position) {\n                    _this._assertInitialized();\n                    _this.marker.setPosition(position);\n                }\n            });\n        };\n        MapMarker.prototype._watchForLabelChanges = function () {\n            var _this = this;\n            this._label.pipe(operators.takeUntil(this._destroy)).subscribe(function (label) {\n                if (_this.marker && label !== undefined) {\n                    _this._assertInitialized();\n                    _this.marker.setLabel(label);\n                }\n            });\n        };\n        MapMarker.prototype._watchForClickableChanges = function () {\n            var _this = this;\n            this._clickable.pipe(operators.takeUntil(this._destroy)).subscribe(function (clickable) {\n                if (_this.marker && clickable !== undefined) {\n                    _this._assertInitialized();\n                    _this.marker.setClickable(clickable);\n                }\n            });\n        };\n        MapMarker.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._googleMap.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.marker) {\n                    throw Error('Cannot interact with a Google Map Marker before it has been ' +\n                        'initialized. Please wait for the Marker to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapMarker;\n    }());\n    MapMarker.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-marker',\n                    exportAs: 'mapMarker',\n                },] }\n    ];\n    MapMarker.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapMarker.propDecorators = {\n        options: [{ type: core.Input }],\n        title: [{ type: core.Input }],\n        position: [{ type: core.Input }],\n        label: [{ type: core.Input }],\n        clickable: [{ type: core.Input }],\n        animationChanged: [{ type: core.Output }],\n        mapClick: [{ type: core.Output }],\n        clickableChanged: [{ type: core.Output }],\n        cursorChanged: [{ type: core.Output }],\n        mapDblclick: [{ type: core.Output }],\n        mapDrag: [{ type: core.Output }],\n        mapDragend: [{ type: core.Output }],\n        draggableChanged: [{ type: core.Output }],\n        mapDragstart: [{ type: core.Output }],\n        flatChanged: [{ type: core.Output }],\n        iconChanged: [{ type: core.Output }],\n        mapMousedown: [{ type: core.Output }],\n        mapMouseout: [{ type: core.Output }],\n        mapMouseover: [{ type: core.Output }],\n        mapMouseup: [{ type: core.Output }],\n        positionChanged: [{ type: core.Output }],\n        mapRightclick: [{ type: core.Output }],\n        shapeChanged: [{ type: core.Output }],\n        titleChanged: [{ type: core.Output }],\n        visibleChanged: [{ type: core.Output }],\n        zindexChanged: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n     */\n    var MapPolygon = /** @class */ (function () {\n        function MapPolygon(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._paths = new rxjs.BehaviorSubject(undefined);\n            this._destroyed = new rxjs.Subject();\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n             */\n            this.polygonClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n             */\n            this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n             */\n            this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n             */\n            this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n             */\n            this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n             */\n            this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n             */\n            this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n             */\n            this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n             */\n            this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n             */\n            this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n             */\n            this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n        }\n        Object.defineProperty(MapPolygon.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapPolygon.prototype, \"paths\", {\n            set: function (paths) {\n                this._paths.next(paths);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapPolygon.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.polygon = new google.maps.Polygon(options);\n                    });\n                    _this._assertInitialized();\n                    _this.polygon.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.polygon);\n                });\n                this._watchForOptionsChanges();\n                this._watchForPathChanges();\n            }\n        };\n        MapPolygon.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.polygon) {\n                this.polygon.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n         */\n        MapPolygon.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return this.polygon.getDraggable();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n         */\n        MapPolygon.prototype.getEditable = function () {\n            this._assertInitialized();\n            return this.polygon.getEditable();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n         */\n        MapPolygon.prototype.getPath = function () {\n            this._assertInitialized();\n            return this.polygon.getPath();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n         */\n        MapPolygon.prototype.getPaths = function () {\n            this._assertInitialized();\n            return this.polygon.getPaths();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n         */\n        MapPolygon.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.polygon.getVisible();\n        };\n        MapPolygon.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._paths]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], paths = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { paths: paths || options.paths });\n                return combinedOptions;\n            }));\n        };\n        MapPolygon.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.polygon.setOptions(options);\n            });\n        };\n        MapPolygon.prototype._watchForPathChanges = function () {\n            var _this = this;\n            this._paths.pipe(operators.takeUntil(this._destroyed)).subscribe(function (paths) {\n                if (paths) {\n                    _this._assertInitialized();\n                    _this.polygon.setPaths(paths);\n                }\n            });\n        };\n        MapPolygon.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.polygon) {\n                    throw Error('Cannot interact with a Google Map Polygon before it has been ' +\n                        'initialized. Please wait for the Polygon to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapPolygon;\n    }());\n    MapPolygon.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-polygon',\n                    exportAs: 'mapPolygon',\n                },] }\n    ];\n    MapPolygon.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapPolygon.propDecorators = {\n        options: [{ type: core.Input }],\n        paths: [{ type: core.Input }],\n        polygonClick: [{ type: core.Output }],\n        polygonDblclick: [{ type: core.Output }],\n        polygonDrag: [{ type: core.Output }],\n        polygonDragend: [{ type: core.Output }],\n        polygonDragstart: [{ type: core.Output }],\n        polygonMousedown: [{ type: core.Output }],\n        polygonMousemove: [{ type: core.Output }],\n        polygonMouseout: [{ type: core.Output }],\n        polygonMouseover: [{ type: core.Output }],\n        polygonMouseup: [{ type: core.Output }],\n        polygonRightclick: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n     */\n    var MapPolyline = /** @class */ (function () {\n        function MapPolyline(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._path = new rxjs.BehaviorSubject(undefined);\n            this._destroyed = new rxjs.Subject();\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n             */\n            this.polylineClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n             */\n            this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n             */\n            this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n             */\n            this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n             */\n            this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n             */\n            this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n             */\n            this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n             */\n            this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n             */\n            this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n             */\n            this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n             */\n            this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n        }\n        Object.defineProperty(MapPolyline.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapPolyline.prototype, \"path\", {\n            set: function (path) {\n                this._path.next(path);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapPolyline.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () { return _this.polyline = new google.maps.Polyline(options); });\n                    _this._assertInitialized();\n                    _this.polyline.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.polyline);\n                });\n                this._watchForOptionsChanges();\n                this._watchForPathChanges();\n            }\n        };\n        MapPolyline.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.polyline) {\n                this.polyline.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n         */\n        MapPolyline.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return this.polyline.getDraggable();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n         */\n        MapPolyline.prototype.getEditable = function () {\n            this._assertInitialized();\n            return this.polyline.getEditable();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n         */\n        MapPolyline.prototype.getPath = function () {\n            this._assertInitialized();\n            // @breaking-change 11.0.0 Make the return value nullable.\n            return this.polyline.getPath();\n        };\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n         */\n        MapPolyline.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.polyline.getVisible();\n        };\n        MapPolyline.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._path]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], path = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { path: path || options.path });\n                return combinedOptions;\n            }));\n        };\n        MapPolyline.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.polyline.setOptions(options);\n            });\n        };\n        MapPolyline.prototype._watchForPathChanges = function () {\n            var _this = this;\n            this._path.pipe(operators.takeUntil(this._destroyed)).subscribe(function (path) {\n                if (path) {\n                    _this._assertInitialized();\n                    _this.polyline.setPath(path);\n                }\n            });\n        };\n        MapPolyline.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.polyline) {\n                    throw Error('Cannot interact with a Google Map Polyline before it has been ' +\n                        'initialized. Please wait for the Polyline to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapPolyline;\n    }());\n    MapPolyline.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-polyline',\n                    exportAs: 'mapPolyline',\n                },] }\n    ];\n    MapPolyline.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapPolyline.propDecorators = {\n        options: [{ type: core.Input }],\n        path: [{ type: core.Input }],\n        polylineClick: [{ type: core.Output }],\n        polylineDblclick: [{ type: core.Output }],\n        polylineDrag: [{ type: core.Output }],\n        polylineDragend: [{ type: core.Output }],\n        polylineDragstart: [{ type: core.Output }],\n        polylineMousedown: [{ type: core.Output }],\n        polylineMousemove: [{ type: core.Output }],\n        polylineMouseout: [{ type: core.Output }],\n        polylineMouseover: [{ type: core.Output }],\n        polylineMouseup: [{ type: core.Output }],\n        polylineRightclick: [{ type: core.Output }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n     */\n    var MapRectangle = /** @class */ (function () {\n        function MapRectangle(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._eventManager = new MapEventManager(this._ngZone);\n            this._options = new rxjs.BehaviorSubject({});\n            this._bounds = new rxjs.BehaviorSubject(undefined);\n            this._destroyed = new rxjs.Subject();\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n             */\n            this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n             */\n            this.rectangleClick = this._eventManager.getLazyEmitter('click');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n             */\n            this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n             */\n            this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n             */\n            this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n             */\n            this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n             */\n            this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n             */\n            this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n             */\n            this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n             */\n            this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n             */\n            this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n            /**\n             * See\n             * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n             */\n            this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n        }\n        Object.defineProperty(MapRectangle.prototype, \"options\", {\n            set: function (options) {\n                this._options.next(options || {});\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MapRectangle.prototype, \"bounds\", {\n            set: function (bounds) {\n                this._bounds.next(bounds);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapRectangle.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.rectangle = new google.maps.Rectangle(options);\n                    });\n                    _this._assertInitialized();\n                    _this.rectangle.setMap(_this._map.googleMap);\n                    _this._eventManager.setTarget(_this.rectangle);\n                });\n                this._watchForOptionsChanges();\n                this._watchForBoundsChanges();\n            }\n        };\n        MapRectangle.prototype.ngOnDestroy = function () {\n            this._eventManager.destroy();\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.rectangle) {\n                this.rectangle.setMap(null);\n            }\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n         */\n        MapRectangle.prototype.getBounds = function () {\n            this._assertInitialized();\n            return this.rectangle.getBounds();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n         */\n        MapRectangle.prototype.getDraggable = function () {\n            this._assertInitialized();\n            return this.rectangle.getDraggable();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n         */\n        MapRectangle.prototype.getEditable = function () {\n            this._assertInitialized();\n            return this.rectangle.getEditable();\n        };\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n         */\n        MapRectangle.prototype.getVisible = function () {\n            this._assertInitialized();\n            return this.rectangle.getVisible();\n        };\n        MapRectangle.prototype._combineOptions = function () {\n            return rxjs.combineLatest([this._options, this._bounds]).pipe(operators.map(function (_a) {\n                var _b = __read(_a, 2), options = _b[0], bounds = _b[1];\n                var combinedOptions = Object.assign(Object.assign({}, options), { bounds: bounds || options.bounds });\n                return combinedOptions;\n            }));\n        };\n        MapRectangle.prototype._watchForOptionsChanges = function () {\n            var _this = this;\n            this._options.pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.rectangle.setOptions(options);\n            });\n        };\n        MapRectangle.prototype._watchForBoundsChanges = function () {\n            var _this = this;\n            this._bounds.pipe(operators.takeUntil(this._destroyed)).subscribe(function (bounds) {\n                if (bounds) {\n                    _this._assertInitialized();\n                    _this.rectangle.setBounds(bounds);\n                }\n            });\n        };\n        MapRectangle.prototype._assertInitialized = function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!this._map.googleMap) {\n                    throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                        'Please wait for the API to load before trying to interact with it.');\n                }\n                if (!this.rectangle) {\n                    throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n                        'Please wait for the Rectangle to load before trying to interact with it.');\n                }\n            }\n        };\n        return MapRectangle;\n    }());\n    MapRectangle.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-rectangle',\n                    exportAs: 'mapRectangle',\n                },] }\n    ];\n    MapRectangle.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapRectangle.propDecorators = {\n        options: [{ type: core.Input }],\n        bounds: [{ type: core.Input }],\n        boundsChanged: [{ type: core.Output }],\n        rectangleClick: [{ type: core.Output }],\n        rectangleDblclick: [{ type: core.Output }],\n        rectangleDrag: [{ type: core.Output }],\n        rectangleDragend: [{ type: core.Output }],\n        rectangleDragstart: [{ type: core.Output }],\n        rectangleMousedown: [{ type: core.Output }],\n        rectangleMousemove: [{ type: core.Output }],\n        rectangleMouseout: [{ type: core.Output }],\n        rectangleMouseover: [{ type: core.Output }],\n        rectangleMouseup: [{ type: core.Output }],\n        rectangleRightclick: [{ type: core.Output }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n     */\n    var MapTrafficLayer = /** @class */ (function () {\n        function MapTrafficLayer(_map, _ngZone) {\n            this._map = _map;\n            this._ngZone = _ngZone;\n            this._autoRefresh = new rxjs.BehaviorSubject(true);\n            this._destroyed = new rxjs.Subject();\n        }\n        Object.defineProperty(MapTrafficLayer.prototype, \"autoRefresh\", {\n            /**\n             * Whether the traffic layer refreshes with updated information automatically.\n             */\n            set: function (autoRefresh) {\n                this._autoRefresh.next(autoRefresh);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapTrafficLayer.prototype.ngOnInit = function () {\n            var _this = this;\n            if (this._map._isBrowser) {\n                this._combineOptions().pipe(operators.take(1)).subscribe(function (options) {\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    _this._ngZone.runOutsideAngular(function () {\n                        _this.trafficLayer = new google.maps.TrafficLayer(options);\n                    });\n                    _this._assertInitialized();\n                    _this.trafficLayer.setMap(_this._map.googleMap);\n                });\n                this._watchForAutoRefreshChanges();\n            }\n        };\n        MapTrafficLayer.prototype.ngOnDestroy = function () {\n            this._destroyed.next();\n            this._destroyed.complete();\n            if (this.trafficLayer) {\n                this.trafficLayer.setMap(null);\n            }\n        };\n        MapTrafficLayer.prototype._combineOptions = function () {\n            return this._autoRefresh.pipe(operators.map(function (autoRefresh) {\n                var combinedOptions = { autoRefresh: autoRefresh };\n                return combinedOptions;\n            }));\n        };\n        MapTrafficLayer.prototype._watchForAutoRefreshChanges = function () {\n            var _this = this;\n            this._combineOptions().pipe(operators.takeUntil(this._destroyed)).subscribe(function (options) {\n                _this._assertInitialized();\n                _this.trafficLayer.setOptions(options);\n            });\n        };\n        MapTrafficLayer.prototype._assertInitialized = function () {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.trafficLayer) {\n                throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n                    'Please wait for the Traffic Layer to load before trying to interact with it.');\n            }\n        };\n        return MapTrafficLayer;\n    }());\n    MapTrafficLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-traffic-layer',\n                    exportAs: 'mapTrafficLayer',\n                },] }\n    ];\n    MapTrafficLayer.ctorParameters = function () { return [\n        { type: GoogleMap },\n        { type: core.NgZone }\n    ]; };\n    MapTrafficLayer.propDecorators = {\n        autoRefresh: [{ type: core.Input }]\n    };\n\n    /**\n     * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n     */\n    var MapTransitLayer = /** @class */ (function (_super) {\n        __extends(MapTransitLayer, _super);\n        function MapTransitLayer() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MapTransitLayer.prototype._initializeObject = function () {\n            this.transitLayer = new google.maps.TransitLayer();\n        };\n        MapTransitLayer.prototype._setMap = function () {\n            this._assertLayerInitialized();\n            this.transitLayer.setMap(this._map.googleMap);\n        };\n        MapTransitLayer.prototype._unsetMap = function () {\n            if (this.transitLayer) {\n                this.transitLayer.setMap(null);\n            }\n        };\n        MapTransitLayer.prototype._assertLayerInitialized = function () {\n            if (!this.transitLayer) {\n                throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n                    'Please wait for the Transit Layer to load before trying to interact with it.');\n            }\n        };\n        return MapTransitLayer;\n    }(MapBaseLayer));\n    MapTransitLayer.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'map-transit-layer',\n                    exportAs: 'mapTransitLayer',\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENTS = [\n        GoogleMap,\n        MapBaseLayer,\n        MapBicyclingLayer,\n        MapCircle,\n        MapGroundOverlay,\n        MapInfoWindow,\n        MapKmlLayer,\n        MapMarker,\n        MapPolygon,\n        MapPolyline,\n        MapRectangle,\n        MapTrafficLayer,\n        MapTransitLayer,\n    ];\n    var GoogleMapsModule = /** @class */ (function () {\n        function GoogleMapsModule() {\n        }\n        return GoogleMapsModule;\n    }());\n    GoogleMapsModule.decorators = [\n        { type: core.NgModule, args: [{\n                    declarations: COMPONENTS,\n                    exports: COMPONENTS,\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.GoogleMap = GoogleMap;\n    exports.GoogleMapsModule = GoogleMapsModule;\n    exports.MapBaseLayer = MapBaseLayer;\n    exports.MapBicyclingLayer = MapBicyclingLayer;\n    exports.MapCircle = MapCircle;\n    exports.MapGroundOverlay = MapGroundOverlay;\n    exports.MapInfoWindow = MapInfoWindow;\n    exports.MapKmlLayer = MapKmlLayer;\n    exports.MapMarker = MapMarker;\n    exports.MapPolygon = MapPolygon;\n    exports.MapPolyline = MapPolyline;\n    exports.MapRectangle = MapRectangle;\n    exports.MapTrafficLayer = MapTrafficLayer;\n    exports.MapTransitLayer = MapTransitLayer;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=google-maps.umd.js.map\n"]}